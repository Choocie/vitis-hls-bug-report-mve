/**
Description: C simulation for an example where HLS breaks due to a bug in the Vivado HLS toolchain.
Author: Marc Neu
Date: 24.01.2025
*/
#include <iostream>
#include "getopt.h"
#include "harness.h"

using std::array;

int numEvents = 1;

int16_t stimuli[16][74] = {{72,  0,  20,  48,  2,  35,  0,  127,  50,  0,  0,  2,  0,  0,  0,  4,  0,  106,  0,  26,  116,  0,  0,  14,  14,  45,  0,  0,  127,  0,  62,  0,  34,  0,  0,  0,  0,  96,  0,  3,  26,  0,  34,  77,  127,  47,  14,  0,  17,  81,  0,  0,  0,  47,  109,  0,  29,  0,  0,  0,  0,  35,  7,  0,  0,  127,  0,  127,  0,  18,  8,  0,  0,  0},
 {69,  14,  21,  44,  0,  29,  0,  127,  52,  0,  0,  0,  0,  18,  0,  0,  73,  127,  0,  19,  104,  0,  0,  0,  17,  19,  0,  0,  127,  0,  127,  0,  33,  0,  0,  0,  0, 94,  0,  4,  30,  0,  35,  68,  127,  49,  4,  0,  11,  77,  0,  0,  0,  45,  116,  0,  30,  0,  0,  0,  0,  34,  5,  0,  0,  118,  0,  119,  0,  18,  27,  0,  0,  0} ,
 {64,  0,  22,  45,  0,  37,  0,  127,  45,  0,  0,  4,  0,  0,  0,  6,  0,  105,  0,  25,  110,  0,  0,  3,  15,  32,  0,  0,  127,  0,  48,  0,  37,  0,  0,  0,  0, 0,  0,  5,  0,  0,  0,  127,  90,  0,  0,  0,  120,  0,  0,  0,  0,  0,  10,  61,  0,  0,  0,  0,  15,  27,  8,  0,  0,  127,  0,  15,  0,  0,  0,  0,  0,  0},
 {5,  0,  0,  0,  0,  0,  127,  77,  0,  0,  0,  127,  0,  0,  0,  0,  0,  40,  63,  0,  0,  0,  0,  31,  21,  6,  0,  0,  127,  0,  41,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  123,  40,  0,  0,  0,  127,  0,  19,  0,  3,  2,  29,  59,  0,  127,  0,  46,  23,  127,  2,  0,  0,  127,  0,  0,  0,  0,  0,  3,  0,  0},
 {0,  0,  2,  0,  0,  0,  127,  78,  0,  0,  0,  127,  0,  0,  0,  0,  0,  41,  64,  0,  4,  0,  0,  27,  20,  6,  0,  0,  127,  0,  41,  0,  0,  0,  0,  0,  0, 13,  0,  0,  0,  0,  0,  127,  78,  0,  0,  0,  127,  0,  0,  0,  0,  19,  76,  61,  0,  0,  0,  0,  31,  25,  12,  0,  0,  127,  0,  41,  0,  0,  0,  0,  0,  0},
 {75,  0,  19,  43,  0,  26,  0,  127,  43,  0,  0,  6,  0,  0,  0,  0,  1,  60,  0,  31,  83,  0,  0,  10,  42,  56,  0,  0,  127,  0,  0,  0,  0,  0,  45,  0,  0, 0,  0,  0,  24,  2,  43,  0,  38,  42,  0,  0,  21,  0,  19,  0,  6,  4,  44,  0,  0,  127,  0,  124,  72,  121,  0,  0,  0,  127,  0,  0,  0,  0,  0,  66,  21,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0},
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0}};

int main(int argc, char *argv[])
{

    int* inputNumList = (int*) calloc(MAX_EVENTS, sizeof(int));
    inputNumList[0] = 12;

    int* outputNumList = (int*) calloc(MAX_EVENTS, sizeof(int));
    outputNumList[0] = 12;

    in_harness_t* inFeatureList = (in_harness_t*) calloc(MAX_EVENTS*II, sizeof(in_harness_t));
    for(int e = 0; e < 16; e++) {
        in_harness_t burst;
        for(int i = 0; i < 74; i++) {
            burst[i] = stimuli[e][i];
        }
        inFeatureList[e] = burst;
    }

    out_harness_t* outFeatureList = (out_harness_t*) calloc(MAX_EVENTS*II, sizeof(out_harness_t));

    harness(numEvents,inputNumList,inFeatureList,outputNumList,outFeatureList);

    for(int e = 0; e < II; e++) {
        out_harness_t burst = outFeatureList[e];
        for(int p = 0; p < PAR; p++) {
            for(int f = 0; f < 16; f++) {
                if((e % II)*PAR + p < 12) {
                    printf("%d, ",burst[p*16+f]);
                }
            }
            printf("\n");
        }
    }

    return 0;
}