// ==============================================================
// Generated by Vitis HLS v2024.2.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module harness_load_Pipeline_VITIS_LOOP_54_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY,
        m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY,
        m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST,
        m_axi_gmem0_0_RID,
        m_axi_gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER,
        m_axi_gmem0_0_RRESP,
        m_axi_gmem0_0_BVALID,
        m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP,
        m_axi_gmem0_0_BID,
        m_axi_gmem0_0_BUSER,
        numStream_din,
        numStream_full_n,
        numStream_write,
        numStream_num_data_valid,
        numStream_fifo_cap,
        empty,
        inputNumList,
        nums_1_address0,
        nums_1_ce0,
        nums_1_we0,
        nums_1_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_0_AWVALID;
input   m_axi_gmem0_0_AWREADY;
output  [63:0] m_axi_gmem0_0_AWADDR;
output  [0:0] m_axi_gmem0_0_AWID;
output  [31:0] m_axi_gmem0_0_AWLEN;
output  [2:0] m_axi_gmem0_0_AWSIZE;
output  [1:0] m_axi_gmem0_0_AWBURST;
output  [1:0] m_axi_gmem0_0_AWLOCK;
output  [3:0] m_axi_gmem0_0_AWCACHE;
output  [2:0] m_axi_gmem0_0_AWPROT;
output  [3:0] m_axi_gmem0_0_AWQOS;
output  [3:0] m_axi_gmem0_0_AWREGION;
output  [0:0] m_axi_gmem0_0_AWUSER;
output   m_axi_gmem0_0_WVALID;
input   m_axi_gmem0_0_WREADY;
output  [1023:0] m_axi_gmem0_0_WDATA;
output  [127:0] m_axi_gmem0_0_WSTRB;
output   m_axi_gmem0_0_WLAST;
output  [0:0] m_axi_gmem0_0_WID;
output  [0:0] m_axi_gmem0_0_WUSER;
output   m_axi_gmem0_0_ARVALID;
input   m_axi_gmem0_0_ARREADY;
output  [63:0] m_axi_gmem0_0_ARADDR;
output  [0:0] m_axi_gmem0_0_ARID;
output  [31:0] m_axi_gmem0_0_ARLEN;
output  [2:0] m_axi_gmem0_0_ARSIZE;
output  [1:0] m_axi_gmem0_0_ARBURST;
output  [1:0] m_axi_gmem0_0_ARLOCK;
output  [3:0] m_axi_gmem0_0_ARCACHE;
output  [2:0] m_axi_gmem0_0_ARPROT;
output  [3:0] m_axi_gmem0_0_ARQOS;
output  [3:0] m_axi_gmem0_0_ARREGION;
output  [0:0] m_axi_gmem0_0_ARUSER;
input   m_axi_gmem0_0_RVALID;
output   m_axi_gmem0_0_RREADY;
input  [1023:0] m_axi_gmem0_0_RDATA;
input   m_axi_gmem0_0_RLAST;
input  [0:0] m_axi_gmem0_0_RID;
input  [8:0] m_axi_gmem0_0_RFIFONUM;
input  [0:0] m_axi_gmem0_0_RUSER;
input  [1:0] m_axi_gmem0_0_RRESP;
input   m_axi_gmem0_0_BVALID;
output   m_axi_gmem0_0_BREADY;
input  [1:0] m_axi_gmem0_0_BRESP;
input  [0:0] m_axi_gmem0_0_BID;
input  [0:0] m_axi_gmem0_0_BUSER;
output  [31:0] numStream_din;
input   numStream_full_n;
output   numStream_write;
input  [13:0] numStream_num_data_valid;
input  [13:0] numStream_fifo_cap;
input  [30:0] empty;
input  [63:0] inputNumList;
output  [12:0] nums_1_address0;
output   nums_1_ce0;
output   nums_1_we0;
output  [31:0] nums_1_d0;

reg ap_idle;
reg m_axi_gmem0_0_ARVALID;
reg m_axi_gmem0_0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln54_fu_138_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_AR;
wire    ap_block_pp0_stage0_grp1;
reg    gmem0_blk_n_R;
reg    numStream_blk_n;
reg   [30:0] e_2_reg_242;
reg    ap_block_pp0_stage0_11001;
reg   [30:0] e_2_reg_242_pp0_iter1_reg;
reg   [30:0] e_2_reg_242_pp0_iter2_reg;
reg   [30:0] e_2_reg_242_pp0_iter3_reg;
reg   [30:0] e_2_reg_242_pp0_iter4_reg;
reg   [30:0] e_2_reg_242_pp0_iter5_reg;
reg   [30:0] e_2_reg_242_pp0_iter6_reg;
reg   [30:0] e_2_reg_242_pp0_iter7_reg;
reg   [30:0] e_2_reg_242_pp0_iter8_reg;
reg   [30:0] e_2_reg_242_pp0_iter9_reg;
reg   [30:0] e_2_reg_242_pp0_iter10_reg;
reg   [30:0] e_2_reg_242_pp0_iter11_reg;
reg   [30:0] e_2_reg_242_pp0_iter12_reg;
reg   [30:0] e_2_reg_242_pp0_iter13_reg;
reg   [30:0] e_2_reg_242_pp0_iter14_reg;
reg   [30:0] e_2_reg_242_pp0_iter15_reg;
reg   [30:0] e_2_reg_242_pp0_iter16_reg;
reg   [30:0] e_2_reg_242_pp0_iter17_reg;
reg   [30:0] e_2_reg_242_pp0_iter18_reg;
reg   [30:0] e_2_reg_242_pp0_iter19_reg;
reg   [30:0] e_2_reg_242_pp0_iter20_reg;
reg   [30:0] e_2_reg_242_pp0_iter21_reg;
reg   [30:0] e_2_reg_242_pp0_iter22_reg;
reg   [30:0] e_2_reg_242_pp0_iter23_reg;
reg   [30:0] e_2_reg_242_pp0_iter24_reg;
reg   [30:0] e_2_reg_242_pp0_iter25_reg;
reg   [30:0] e_2_reg_242_pp0_iter26_reg;
reg   [30:0] e_2_reg_242_pp0_iter27_reg;
reg   [30:0] e_2_reg_242_pp0_iter28_reg;
reg   [30:0] e_2_reg_242_pp0_iter29_reg;
reg   [30:0] e_2_reg_242_pp0_iter30_reg;
reg   [30:0] e_2_reg_242_pp0_iter31_reg;
reg   [30:0] e_2_reg_242_pp0_iter32_reg;
reg   [30:0] e_2_reg_242_pp0_iter33_reg;
reg   [30:0] e_2_reg_242_pp0_iter34_reg;
reg   [30:0] e_2_reg_242_pp0_iter35_reg;
reg   [30:0] e_2_reg_242_pp0_iter36_reg;
reg   [30:0] e_2_reg_242_pp0_iter37_reg;
reg   [30:0] e_2_reg_242_pp0_iter38_reg;
reg   [30:0] e_2_reg_242_pp0_iter39_reg;
reg   [30:0] e_2_reg_242_pp0_iter40_reg;
reg   [30:0] e_2_reg_242_pp0_iter41_reg;
reg   [30:0] e_2_reg_242_pp0_iter42_reg;
reg   [30:0] e_2_reg_242_pp0_iter43_reg;
reg   [30:0] e_2_reg_242_pp0_iter44_reg;
reg   [30:0] e_2_reg_242_pp0_iter45_reg;
reg   [30:0] e_2_reg_242_pp0_iter46_reg;
reg   [30:0] e_2_reg_242_pp0_iter47_reg;
reg   [30:0] e_2_reg_242_pp0_iter48_reg;
reg   [30:0] e_2_reg_242_pp0_iter49_reg;
reg   [30:0] e_2_reg_242_pp0_iter50_reg;
reg   [30:0] e_2_reg_242_pp0_iter51_reg;
reg   [30:0] e_2_reg_242_pp0_iter52_reg;
reg   [30:0] e_2_reg_242_pp0_iter53_reg;
reg   [30:0] e_2_reg_242_pp0_iter54_reg;
reg   [30:0] e_2_reg_242_pp0_iter55_reg;
reg   [30:0] e_2_reg_242_pp0_iter56_reg;
reg   [30:0] e_2_reg_242_pp0_iter57_reg;
reg   [30:0] e_2_reg_242_pp0_iter58_reg;
reg   [30:0] e_2_reg_242_pp0_iter59_reg;
reg   [30:0] e_2_reg_242_pp0_iter60_reg;
reg   [30:0] e_2_reg_242_pp0_iter61_reg;
reg   [30:0] e_2_reg_242_pp0_iter62_reg;
reg   [30:0] e_2_reg_242_pp0_iter63_reg;
reg   [30:0] e_2_reg_242_pp0_iter64_reg;
reg   [30:0] e_2_reg_242_pp0_iter65_reg;
reg   [30:0] e_2_reg_242_pp0_iter66_reg;
reg   [30:0] e_2_reg_242_pp0_iter67_reg;
reg   [30:0] e_2_reg_242_pp0_iter68_reg;
reg   [30:0] e_2_reg_242_pp0_iter69_reg;
reg   [30:0] e_2_reg_242_pp0_iter70_reg;
reg   [30:0] e_2_reg_242_pp0_iter71_reg;
reg   [30:0] e_2_reg_242_pp0_iter72_reg;
reg   [30:0] e_2_reg_242_pp0_iter73_reg;
reg   [30:0] e_2_reg_242_pp0_iter74_reg;
reg   [30:0] e_2_reg_242_pp0_iter75_reg;
reg   [30:0] e_2_reg_242_pp0_iter76_reg;
reg   [30:0] e_2_reg_242_pp0_iter77_reg;
reg   [56:0] trunc_ln5_reg_251;
wire   [6:0] trunc_ln56_fu_172_p1;
reg   [6:0] trunc_ln56_reg_256;
reg   [6:0] trunc_ln56_reg_256_pp0_iter1_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter2_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter3_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter4_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter5_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter6_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter7_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter8_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter9_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter10_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter11_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter12_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter13_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter14_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter15_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter16_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter17_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter18_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter19_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter20_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter21_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter22_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter23_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter24_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter25_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter26_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter27_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter28_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter29_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter30_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter31_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter32_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter33_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter34_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter35_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter36_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter37_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter38_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter39_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter40_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter41_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter42_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter43_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter44_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter45_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter46_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter47_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter48_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter49_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter50_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter51_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter52_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter53_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter54_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter55_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter56_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter57_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter58_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter59_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter60_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter61_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter62_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter63_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter64_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter65_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter66_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter67_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter68_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter69_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter70_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter71_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter72_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter73_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter74_reg;
reg   [6:0] trunc_ln56_reg_256_pp0_iter75_reg;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [1023:0] gmem0_addr_read_reg_267;
wire   [31:0] n_fu_217_p1;
reg   [31:0] n_reg_277;
wire   [63:0] zext_ln54_fu_221_p1;
wire    ap_block_pp0_stage0_grp0;
wire  signed [63:0] sext_ln56_fu_181_p1;
reg   [30:0] e_fu_76;
wire   [30:0] add_ln54_fu_132_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_e_2;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_01001_grp1;
reg    numStream_write_local;
reg    nums_1_we0_local;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    nums_1_ce0_local;
wire   [32:0] shl_ln_fu_144_p3;
wire   [63:0] zext_ln56_fu_152_p1;
wire   [63:0] add_ln56_fu_156_p2;
wire   [9:0] shl_ln56_1_fu_201_p3;
wire   [1023:0] grp_fu_212_p1;
wire   [1023:0] grp_fu_212_p2;
reg    grp_fu_212_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg    ap_loop_exit_ready_pp0_iter71_reg;
reg    ap_loop_exit_ready_pp0_iter72_reg;
reg    ap_loop_exit_ready_pp0_iter73_reg;
reg    ap_loop_exit_ready_pp0_iter74_reg;
reg    ap_loop_exit_ready_pp0_iter75_reg;
reg    ap_loop_exit_ready_pp0_iter76_reg;
reg    ap_loop_exit_ready_pp0_iter77_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 e_fu_76 = 31'd0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

harness_lshr_1024ns_10ns_1024_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 1024 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 1024 ))
lshr_1024ns_10ns_1024_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(gmem0_addr_read_reg_267),
    .din1(grp_fu_212_p1),
    .ce(grp_fu_212_ce),
    .dout(grp_fu_212_p2)
);

harness_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter77_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln54_fu_138_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            e_fu_76 <= add_ln54_fu_132_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            e_fu_76 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter71_reg <= ap_loop_exit_ready_pp0_iter70_reg;
        ap_loop_exit_ready_pp0_iter72_reg <= ap_loop_exit_ready_pp0_iter71_reg;
        ap_loop_exit_ready_pp0_iter73_reg <= ap_loop_exit_ready_pp0_iter72_reg;
        ap_loop_exit_ready_pp0_iter74_reg <= ap_loop_exit_ready_pp0_iter73_reg;
        ap_loop_exit_ready_pp0_iter75_reg <= ap_loop_exit_ready_pp0_iter74_reg;
        ap_loop_exit_ready_pp0_iter76_reg <= ap_loop_exit_ready_pp0_iter75_reg;
        ap_loop_exit_ready_pp0_iter77_reg <= ap_loop_exit_ready_pp0_iter76_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        e_2_reg_242_pp0_iter10_reg <= e_2_reg_242_pp0_iter9_reg;
        e_2_reg_242_pp0_iter11_reg <= e_2_reg_242_pp0_iter10_reg;
        e_2_reg_242_pp0_iter12_reg <= e_2_reg_242_pp0_iter11_reg;
        e_2_reg_242_pp0_iter13_reg <= e_2_reg_242_pp0_iter12_reg;
        e_2_reg_242_pp0_iter14_reg <= e_2_reg_242_pp0_iter13_reg;
        e_2_reg_242_pp0_iter15_reg <= e_2_reg_242_pp0_iter14_reg;
        e_2_reg_242_pp0_iter16_reg <= e_2_reg_242_pp0_iter15_reg;
        e_2_reg_242_pp0_iter17_reg <= e_2_reg_242_pp0_iter16_reg;
        e_2_reg_242_pp0_iter18_reg <= e_2_reg_242_pp0_iter17_reg;
        e_2_reg_242_pp0_iter19_reg <= e_2_reg_242_pp0_iter18_reg;
        e_2_reg_242_pp0_iter20_reg <= e_2_reg_242_pp0_iter19_reg;
        e_2_reg_242_pp0_iter21_reg <= e_2_reg_242_pp0_iter20_reg;
        e_2_reg_242_pp0_iter22_reg <= e_2_reg_242_pp0_iter21_reg;
        e_2_reg_242_pp0_iter23_reg <= e_2_reg_242_pp0_iter22_reg;
        e_2_reg_242_pp0_iter24_reg <= e_2_reg_242_pp0_iter23_reg;
        e_2_reg_242_pp0_iter25_reg <= e_2_reg_242_pp0_iter24_reg;
        e_2_reg_242_pp0_iter26_reg <= e_2_reg_242_pp0_iter25_reg;
        e_2_reg_242_pp0_iter27_reg <= e_2_reg_242_pp0_iter26_reg;
        e_2_reg_242_pp0_iter28_reg <= e_2_reg_242_pp0_iter27_reg;
        e_2_reg_242_pp0_iter29_reg <= e_2_reg_242_pp0_iter28_reg;
        e_2_reg_242_pp0_iter2_reg <= e_2_reg_242_pp0_iter1_reg;
        e_2_reg_242_pp0_iter30_reg <= e_2_reg_242_pp0_iter29_reg;
        e_2_reg_242_pp0_iter31_reg <= e_2_reg_242_pp0_iter30_reg;
        e_2_reg_242_pp0_iter32_reg <= e_2_reg_242_pp0_iter31_reg;
        e_2_reg_242_pp0_iter33_reg <= e_2_reg_242_pp0_iter32_reg;
        e_2_reg_242_pp0_iter34_reg <= e_2_reg_242_pp0_iter33_reg;
        e_2_reg_242_pp0_iter35_reg <= e_2_reg_242_pp0_iter34_reg;
        e_2_reg_242_pp0_iter36_reg <= e_2_reg_242_pp0_iter35_reg;
        e_2_reg_242_pp0_iter37_reg <= e_2_reg_242_pp0_iter36_reg;
        e_2_reg_242_pp0_iter38_reg <= e_2_reg_242_pp0_iter37_reg;
        e_2_reg_242_pp0_iter39_reg <= e_2_reg_242_pp0_iter38_reg;
        e_2_reg_242_pp0_iter3_reg <= e_2_reg_242_pp0_iter2_reg;
        e_2_reg_242_pp0_iter40_reg <= e_2_reg_242_pp0_iter39_reg;
        e_2_reg_242_pp0_iter41_reg <= e_2_reg_242_pp0_iter40_reg;
        e_2_reg_242_pp0_iter42_reg <= e_2_reg_242_pp0_iter41_reg;
        e_2_reg_242_pp0_iter43_reg <= e_2_reg_242_pp0_iter42_reg;
        e_2_reg_242_pp0_iter44_reg <= e_2_reg_242_pp0_iter43_reg;
        e_2_reg_242_pp0_iter45_reg <= e_2_reg_242_pp0_iter44_reg;
        e_2_reg_242_pp0_iter46_reg <= e_2_reg_242_pp0_iter45_reg;
        e_2_reg_242_pp0_iter47_reg <= e_2_reg_242_pp0_iter46_reg;
        e_2_reg_242_pp0_iter48_reg <= e_2_reg_242_pp0_iter47_reg;
        e_2_reg_242_pp0_iter49_reg <= e_2_reg_242_pp0_iter48_reg;
        e_2_reg_242_pp0_iter4_reg <= e_2_reg_242_pp0_iter3_reg;
        e_2_reg_242_pp0_iter50_reg <= e_2_reg_242_pp0_iter49_reg;
        e_2_reg_242_pp0_iter51_reg <= e_2_reg_242_pp0_iter50_reg;
        e_2_reg_242_pp0_iter52_reg <= e_2_reg_242_pp0_iter51_reg;
        e_2_reg_242_pp0_iter53_reg <= e_2_reg_242_pp0_iter52_reg;
        e_2_reg_242_pp0_iter54_reg <= e_2_reg_242_pp0_iter53_reg;
        e_2_reg_242_pp0_iter55_reg <= e_2_reg_242_pp0_iter54_reg;
        e_2_reg_242_pp0_iter56_reg <= e_2_reg_242_pp0_iter55_reg;
        e_2_reg_242_pp0_iter57_reg <= e_2_reg_242_pp0_iter56_reg;
        e_2_reg_242_pp0_iter58_reg <= e_2_reg_242_pp0_iter57_reg;
        e_2_reg_242_pp0_iter59_reg <= e_2_reg_242_pp0_iter58_reg;
        e_2_reg_242_pp0_iter5_reg <= e_2_reg_242_pp0_iter4_reg;
        e_2_reg_242_pp0_iter60_reg <= e_2_reg_242_pp0_iter59_reg;
        e_2_reg_242_pp0_iter61_reg <= e_2_reg_242_pp0_iter60_reg;
        e_2_reg_242_pp0_iter62_reg <= e_2_reg_242_pp0_iter61_reg;
        e_2_reg_242_pp0_iter63_reg <= e_2_reg_242_pp0_iter62_reg;
        e_2_reg_242_pp0_iter64_reg <= e_2_reg_242_pp0_iter63_reg;
        e_2_reg_242_pp0_iter65_reg <= e_2_reg_242_pp0_iter64_reg;
        e_2_reg_242_pp0_iter66_reg <= e_2_reg_242_pp0_iter65_reg;
        e_2_reg_242_pp0_iter67_reg <= e_2_reg_242_pp0_iter66_reg;
        e_2_reg_242_pp0_iter68_reg <= e_2_reg_242_pp0_iter67_reg;
        e_2_reg_242_pp0_iter69_reg <= e_2_reg_242_pp0_iter68_reg;
        e_2_reg_242_pp0_iter6_reg <= e_2_reg_242_pp0_iter5_reg;
        e_2_reg_242_pp0_iter70_reg <= e_2_reg_242_pp0_iter69_reg;
        e_2_reg_242_pp0_iter71_reg <= e_2_reg_242_pp0_iter70_reg;
        e_2_reg_242_pp0_iter72_reg <= e_2_reg_242_pp0_iter71_reg;
        e_2_reg_242_pp0_iter73_reg <= e_2_reg_242_pp0_iter72_reg;
        e_2_reg_242_pp0_iter74_reg <= e_2_reg_242_pp0_iter73_reg;
        e_2_reg_242_pp0_iter75_reg <= e_2_reg_242_pp0_iter74_reg;
        e_2_reg_242_pp0_iter76_reg <= e_2_reg_242_pp0_iter75_reg;
        e_2_reg_242_pp0_iter77_reg <= e_2_reg_242_pp0_iter76_reg;
        e_2_reg_242_pp0_iter7_reg <= e_2_reg_242_pp0_iter6_reg;
        e_2_reg_242_pp0_iter8_reg <= e_2_reg_242_pp0_iter7_reg;
        e_2_reg_242_pp0_iter9_reg <= e_2_reg_242_pp0_iter8_reg;
        trunc_ln56_reg_256_pp0_iter10_reg <= trunc_ln56_reg_256_pp0_iter9_reg;
        trunc_ln56_reg_256_pp0_iter11_reg <= trunc_ln56_reg_256_pp0_iter10_reg;
        trunc_ln56_reg_256_pp0_iter12_reg <= trunc_ln56_reg_256_pp0_iter11_reg;
        trunc_ln56_reg_256_pp0_iter13_reg <= trunc_ln56_reg_256_pp0_iter12_reg;
        trunc_ln56_reg_256_pp0_iter14_reg <= trunc_ln56_reg_256_pp0_iter13_reg;
        trunc_ln56_reg_256_pp0_iter15_reg <= trunc_ln56_reg_256_pp0_iter14_reg;
        trunc_ln56_reg_256_pp0_iter16_reg <= trunc_ln56_reg_256_pp0_iter15_reg;
        trunc_ln56_reg_256_pp0_iter17_reg <= trunc_ln56_reg_256_pp0_iter16_reg;
        trunc_ln56_reg_256_pp0_iter18_reg <= trunc_ln56_reg_256_pp0_iter17_reg;
        trunc_ln56_reg_256_pp0_iter19_reg <= trunc_ln56_reg_256_pp0_iter18_reg;
        trunc_ln56_reg_256_pp0_iter20_reg <= trunc_ln56_reg_256_pp0_iter19_reg;
        trunc_ln56_reg_256_pp0_iter21_reg <= trunc_ln56_reg_256_pp0_iter20_reg;
        trunc_ln56_reg_256_pp0_iter22_reg <= trunc_ln56_reg_256_pp0_iter21_reg;
        trunc_ln56_reg_256_pp0_iter23_reg <= trunc_ln56_reg_256_pp0_iter22_reg;
        trunc_ln56_reg_256_pp0_iter24_reg <= trunc_ln56_reg_256_pp0_iter23_reg;
        trunc_ln56_reg_256_pp0_iter25_reg <= trunc_ln56_reg_256_pp0_iter24_reg;
        trunc_ln56_reg_256_pp0_iter26_reg <= trunc_ln56_reg_256_pp0_iter25_reg;
        trunc_ln56_reg_256_pp0_iter27_reg <= trunc_ln56_reg_256_pp0_iter26_reg;
        trunc_ln56_reg_256_pp0_iter28_reg <= trunc_ln56_reg_256_pp0_iter27_reg;
        trunc_ln56_reg_256_pp0_iter29_reg <= trunc_ln56_reg_256_pp0_iter28_reg;
        trunc_ln56_reg_256_pp0_iter2_reg <= trunc_ln56_reg_256_pp0_iter1_reg;
        trunc_ln56_reg_256_pp0_iter30_reg <= trunc_ln56_reg_256_pp0_iter29_reg;
        trunc_ln56_reg_256_pp0_iter31_reg <= trunc_ln56_reg_256_pp0_iter30_reg;
        trunc_ln56_reg_256_pp0_iter32_reg <= trunc_ln56_reg_256_pp0_iter31_reg;
        trunc_ln56_reg_256_pp0_iter33_reg <= trunc_ln56_reg_256_pp0_iter32_reg;
        trunc_ln56_reg_256_pp0_iter34_reg <= trunc_ln56_reg_256_pp0_iter33_reg;
        trunc_ln56_reg_256_pp0_iter35_reg <= trunc_ln56_reg_256_pp0_iter34_reg;
        trunc_ln56_reg_256_pp0_iter36_reg <= trunc_ln56_reg_256_pp0_iter35_reg;
        trunc_ln56_reg_256_pp0_iter37_reg <= trunc_ln56_reg_256_pp0_iter36_reg;
        trunc_ln56_reg_256_pp0_iter38_reg <= trunc_ln56_reg_256_pp0_iter37_reg;
        trunc_ln56_reg_256_pp0_iter39_reg <= trunc_ln56_reg_256_pp0_iter38_reg;
        trunc_ln56_reg_256_pp0_iter3_reg <= trunc_ln56_reg_256_pp0_iter2_reg;
        trunc_ln56_reg_256_pp0_iter40_reg <= trunc_ln56_reg_256_pp0_iter39_reg;
        trunc_ln56_reg_256_pp0_iter41_reg <= trunc_ln56_reg_256_pp0_iter40_reg;
        trunc_ln56_reg_256_pp0_iter42_reg <= trunc_ln56_reg_256_pp0_iter41_reg;
        trunc_ln56_reg_256_pp0_iter43_reg <= trunc_ln56_reg_256_pp0_iter42_reg;
        trunc_ln56_reg_256_pp0_iter44_reg <= trunc_ln56_reg_256_pp0_iter43_reg;
        trunc_ln56_reg_256_pp0_iter45_reg <= trunc_ln56_reg_256_pp0_iter44_reg;
        trunc_ln56_reg_256_pp0_iter46_reg <= trunc_ln56_reg_256_pp0_iter45_reg;
        trunc_ln56_reg_256_pp0_iter47_reg <= trunc_ln56_reg_256_pp0_iter46_reg;
        trunc_ln56_reg_256_pp0_iter48_reg <= trunc_ln56_reg_256_pp0_iter47_reg;
        trunc_ln56_reg_256_pp0_iter49_reg <= trunc_ln56_reg_256_pp0_iter48_reg;
        trunc_ln56_reg_256_pp0_iter4_reg <= trunc_ln56_reg_256_pp0_iter3_reg;
        trunc_ln56_reg_256_pp0_iter50_reg <= trunc_ln56_reg_256_pp0_iter49_reg;
        trunc_ln56_reg_256_pp0_iter51_reg <= trunc_ln56_reg_256_pp0_iter50_reg;
        trunc_ln56_reg_256_pp0_iter52_reg <= trunc_ln56_reg_256_pp0_iter51_reg;
        trunc_ln56_reg_256_pp0_iter53_reg <= trunc_ln56_reg_256_pp0_iter52_reg;
        trunc_ln56_reg_256_pp0_iter54_reg <= trunc_ln56_reg_256_pp0_iter53_reg;
        trunc_ln56_reg_256_pp0_iter55_reg <= trunc_ln56_reg_256_pp0_iter54_reg;
        trunc_ln56_reg_256_pp0_iter56_reg <= trunc_ln56_reg_256_pp0_iter55_reg;
        trunc_ln56_reg_256_pp0_iter57_reg <= trunc_ln56_reg_256_pp0_iter56_reg;
        trunc_ln56_reg_256_pp0_iter58_reg <= trunc_ln56_reg_256_pp0_iter57_reg;
        trunc_ln56_reg_256_pp0_iter59_reg <= trunc_ln56_reg_256_pp0_iter58_reg;
        trunc_ln56_reg_256_pp0_iter5_reg <= trunc_ln56_reg_256_pp0_iter4_reg;
        trunc_ln56_reg_256_pp0_iter60_reg <= trunc_ln56_reg_256_pp0_iter59_reg;
        trunc_ln56_reg_256_pp0_iter61_reg <= trunc_ln56_reg_256_pp0_iter60_reg;
        trunc_ln56_reg_256_pp0_iter62_reg <= trunc_ln56_reg_256_pp0_iter61_reg;
        trunc_ln56_reg_256_pp0_iter63_reg <= trunc_ln56_reg_256_pp0_iter62_reg;
        trunc_ln56_reg_256_pp0_iter64_reg <= trunc_ln56_reg_256_pp0_iter63_reg;
        trunc_ln56_reg_256_pp0_iter65_reg <= trunc_ln56_reg_256_pp0_iter64_reg;
        trunc_ln56_reg_256_pp0_iter66_reg <= trunc_ln56_reg_256_pp0_iter65_reg;
        trunc_ln56_reg_256_pp0_iter67_reg <= trunc_ln56_reg_256_pp0_iter66_reg;
        trunc_ln56_reg_256_pp0_iter68_reg <= trunc_ln56_reg_256_pp0_iter67_reg;
        trunc_ln56_reg_256_pp0_iter69_reg <= trunc_ln56_reg_256_pp0_iter68_reg;
        trunc_ln56_reg_256_pp0_iter6_reg <= trunc_ln56_reg_256_pp0_iter5_reg;
        trunc_ln56_reg_256_pp0_iter70_reg <= trunc_ln56_reg_256_pp0_iter69_reg;
        trunc_ln56_reg_256_pp0_iter71_reg <= trunc_ln56_reg_256_pp0_iter70_reg;
        trunc_ln56_reg_256_pp0_iter72_reg <= trunc_ln56_reg_256_pp0_iter71_reg;
        trunc_ln56_reg_256_pp0_iter73_reg <= trunc_ln56_reg_256_pp0_iter72_reg;
        trunc_ln56_reg_256_pp0_iter74_reg <= trunc_ln56_reg_256_pp0_iter73_reg;
        trunc_ln56_reg_256_pp0_iter75_reg <= trunc_ln56_reg_256_pp0_iter74_reg;
        trunc_ln56_reg_256_pp0_iter7_reg <= trunc_ln56_reg_256_pp0_iter6_reg;
        trunc_ln56_reg_256_pp0_iter8_reg <= trunc_ln56_reg_256_pp0_iter7_reg;
        trunc_ln56_reg_256_pp0_iter9_reg <= trunc_ln56_reg_256_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        e_2_reg_242 <= ap_sig_allocacmp_e_2;
        e_2_reg_242_pp0_iter1_reg <= e_2_reg_242;
        trunc_ln56_reg_256 <= trunc_ln56_fu_172_p1;
        trunc_ln56_reg_256_pp0_iter1_reg <= trunc_ln56_reg_256;
        trunc_ln5_reg_251 <= {{add_ln56_fu_156_p2[63:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        gmem0_addr_read_reg_267 <= m_axi_gmem0_0_RDATA;
        n_reg_277 <= n_fu_217_p1;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_138_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter77_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) 
    & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 
    == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_e_2 = 31'd0;
    end else begin
        ap_sig_allocacmp_e_2 = e_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem0_blk_n_AR = m_axi_gmem0_0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter75 == 1'b1))) begin
        gmem0_blk_n_R = m_axi_gmem0_0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_212_ce = 1'b1;
    end else begin
        grp_fu_212_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem0_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter75 == 1'b1))) begin
        m_axi_gmem0_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter78 == 1'b1))) begin
        numStream_blk_n = numStream_full_n;
    end else begin
        numStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter78 == 1'b1))) begin
        numStream_write_local = 1'b1;
    end else begin
        numStream_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter78 == 1'b1))) begin
        nums_1_ce0_local = 1'b1;
    end else begin
        nums_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter78 == 1'b1))) begin
        nums_1_we0_local = 1'b1;
    end else begin
        nums_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln54_fu_132_p2 = (ap_sig_allocacmp_e_2 + 31'd1);

assign add_ln56_fu_156_p2 = (zext_ln56_fu_152_p1 + inputNumList);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = (((numStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b1)) | ((m_axi_gmem0_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((numStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b1)) | ((m_axi_gmem0_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b1)) | ((m_axi_gmem0_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = (((numStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b1)) | ((m_axi_gmem0_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b1)) | ((m_axi_gmem0_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((numStream_full_n == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b1)) | ((m_axi_gmem0_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b1)) | ((m_axi_gmem0_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_212_p1 = shl_ln56_1_fu_201_p3;

assign icmp_ln54_fu_138_p2 = ((ap_sig_allocacmp_e_2 == empty) ? 1'b1 : 1'b0);

assign m_axi_gmem0_0_ARADDR = sext_ln56_fu_181_p1;

assign m_axi_gmem0_0_ARBURST = 2'd0;

assign m_axi_gmem0_0_ARCACHE = 4'd0;

assign m_axi_gmem0_0_ARID = 1'd0;

assign m_axi_gmem0_0_ARLEN = 64'd1;

assign m_axi_gmem0_0_ARLOCK = 2'd0;

assign m_axi_gmem0_0_ARPROT = 3'd0;

assign m_axi_gmem0_0_ARQOS = 4'd0;

assign m_axi_gmem0_0_ARREGION = 4'd0;

assign m_axi_gmem0_0_ARSIZE = 3'd0;

assign m_axi_gmem0_0_ARUSER = 1'd0;

assign m_axi_gmem0_0_AWADDR = 64'd0;

assign m_axi_gmem0_0_AWBURST = 2'd0;

assign m_axi_gmem0_0_AWCACHE = 4'd0;

assign m_axi_gmem0_0_AWID = 1'd0;

assign m_axi_gmem0_0_AWLEN = 32'd0;

assign m_axi_gmem0_0_AWLOCK = 2'd0;

assign m_axi_gmem0_0_AWPROT = 3'd0;

assign m_axi_gmem0_0_AWQOS = 4'd0;

assign m_axi_gmem0_0_AWREGION = 4'd0;

assign m_axi_gmem0_0_AWSIZE = 3'd0;

assign m_axi_gmem0_0_AWUSER = 1'd0;

assign m_axi_gmem0_0_AWVALID = 1'b0;

assign m_axi_gmem0_0_BREADY = 1'b0;

assign m_axi_gmem0_0_WDATA = 1024'd0;

assign m_axi_gmem0_0_WID = 1'd0;

assign m_axi_gmem0_0_WLAST = 1'b0;

assign m_axi_gmem0_0_WSTRB = 128'd0;

assign m_axi_gmem0_0_WUSER = 1'd0;

assign m_axi_gmem0_0_WVALID = 1'b0;

assign n_fu_217_p1 = grp_fu_212_p2[31:0];

assign numStream_din = n_reg_277;

assign numStream_write = numStream_write_local;

assign nums_1_address0 = zext_ln54_fu_221_p1;

assign nums_1_ce0 = nums_1_ce0_local;

assign nums_1_d0 = n_reg_277;

assign nums_1_we0 = nums_1_we0_local;

assign sext_ln56_fu_181_p1 = $signed(trunc_ln5_reg_251);

assign shl_ln56_1_fu_201_p3 = {{trunc_ln56_reg_256_pp0_iter75_reg}, {3'd0}};

assign shl_ln_fu_144_p3 = {{ap_sig_allocacmp_e_2}, {2'd0}};

assign trunc_ln56_fu_172_p1 = add_ln56_fu_156_p2[6:0];

assign zext_ln54_fu_221_p1 = e_2_reg_242_pp0_iter77_reg;

assign zext_ln56_fu_152_p1 = shl_ln_fu_144_p3;

endmodule //harness_load_Pipeline_VITIS_LOOP_54_1
