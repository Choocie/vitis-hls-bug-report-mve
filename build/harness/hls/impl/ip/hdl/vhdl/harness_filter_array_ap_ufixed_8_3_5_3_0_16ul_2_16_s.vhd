-- ==============================================================
-- Generated by Vitis HLS v2024.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity harness_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    multicastNumStream_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    multicastNumStream_1_empty_n : IN STD_LOGIC;
    multicastNumStream_1_read : OUT STD_LOGIC;
    multicastNumStream_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    multicastNumStream_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    lastStream_0_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    lastStream_0_full_n : IN STD_LOGIC;
    lastStream_0_write : OUT STD_LOGIC;
    lastStream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    lastStream_1_full_n : IN STD_LOGIC;
    lastStream_1_write : OUT STD_LOGIC;
    lastStream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    dense11Stream_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    dense11Stream_0_empty_n : IN STD_LOGIC;
    dense11Stream_0_read : OUT STD_LOGIC;
    dense11Stream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    dense11Stream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    outputStream_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    outputStream_0_full_n : IN STD_LOGIC;
    outputStream_0_write : OUT STD_LOGIC;
    outputStream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    outputStream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    dense11Stream_1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    dense11Stream_1_empty_n : IN STD_LOGIC;
    dense11Stream_1_read : OUT STD_LOGIC;
    dense11Stream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    dense11Stream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    outputStream_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    outputStream_1_full_n : IN STD_LOGIC;
    outputStream_1_write : OUT STD_LOGIC;
    outputStream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    outputStream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_0_almost_full_n : IN STD_LOGIC;
    lastStream_1_almost_full_n : IN STD_LOGIC );
end;


architecture behav of harness_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln63_reg_252 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal cmp11_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp11_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_predicate_pre_block_op37 : BOOLEAN;
    signal ap_predicate_pre_block_op40 : BOOLEAN;
    signal ap_block_IOBlock_state2_reg_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp2 : BOOLEAN;
    signal ap_predicate_pre_block_op43 : BOOLEAN;
    signal ap_predicate_pre_block_op46 : BOOLEAN;
    signal ap_block_IOBlock_state2_reg_grp3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp3_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp3 : BOOLEAN;
    signal icmp_ln70_reg_260 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_1_reg_264 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter3_grp1 : BOOLEAN;
    signal icmp_ln60_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal dense11Stream_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal dense11Stream_1_blk_n : STD_LOGIC;
    signal multicastNumStream_1_blk_n : STD_LOGIC;
    signal outputStream_0_blk_n : STD_LOGIC;
    signal outputStream_1_blk_n : STD_LOGIC;
    signal ap_block_IOBlock_op40_n : STD_LOGIC;
    signal lastStream_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp2 : BOOLEAN;
    signal ap_block_IOBlock_op37_n : STD_LOGIC;
    signal ap_block_IOBlock_op43_n : STD_LOGIC;
    signal lastStream_1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp3 : BOOLEAN;
    signal ap_block_IOBlock_op46_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal ii_1_reg_242 : STD_LOGIC_VECTOR (4 downto 0);
    signal ii_1_reg_242_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln63_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal icmp_ln70_1_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ii_fu_58 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal ii_2_fu_126_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_ii_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal num_fu_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal multicastNumStream_1_read_local : STD_LOGIC;
    signal lastStream_0_din_local : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001_grp2 : BOOLEAN;
    signal lastStream_0_write_local : STD_LOGIC;
    signal ap_block_pp0_stage0_11001_grp2 : BOOLEAN;
    signal lastStream_1_din_local : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001_grp3 : BOOLEAN;
    signal lastStream_1_write_local : STD_LOGIC;
    signal ap_block_pp0_stage0_11001_grp3 : BOOLEAN;
    signal dense11Stream_0_read_local : STD_LOGIC;
    signal ap_block_pp0_stage0_01001_grp1 : BOOLEAN;
    signal outputStream_0_write_local : STD_LOGIC;
    signal dense11Stream_1_read_local : STD_LOGIC;
    signal outputStream_1_write_local : STD_LOGIC;
    signal empty_66_fu_184_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_cast_fu_189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_181_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln_fu_199_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln70_fu_207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_260 : BOOLEAN;
    signal ap_condition_436 : BOOLEAN;
    signal ap_condition_439 : BOOLEAN;
    signal ap_condition_444 : BOOLEAN;
    signal ap_condition_447 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component harness_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_U : component harness_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2)) then 
                    ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp3_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp3_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp3_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3)) then 
                    ap_block_pp0_stage0_subdone_grp3_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_block_IOBlock_op37_n_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lastStream_0_almost_full_n = ap_const_logic_0)) then 
                ap_block_IOBlock_op37_n <= ap_const_logic_0;
            else 
                ap_block_IOBlock_op37_n <= ap_const_logic_1;
            end if; 
        end if;
    end process;

    ap_block_IOBlock_op40_n_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lastStream_0_almost_full_n = ap_const_logic_0)) then 
                ap_block_IOBlock_op40_n <= ap_const_logic_0;
            else 
                ap_block_IOBlock_op40_n <= ap_const_logic_1;
            end if; 
        end if;
    end process;

    ap_block_IOBlock_op43_n_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lastStream_1_almost_full_n = ap_const_logic_0)) then 
                ap_block_IOBlock_op43_n <= ap_const_logic_0;
            else 
                ap_block_IOBlock_op43_n <= ap_const_logic_1;
            end if; 
        end if;
    end process;

    ap_block_IOBlock_op46_n_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lastStream_1_almost_full_n = ap_const_logic_0)) then 
                ap_block_IOBlock_op46_n <= ap_const_logic_0;
            else 
                ap_block_IOBlock_op46_n <= ap_const_logic_1;
            end if; 
        end if;
    end process;

    ap_block_IOBlock_state2_reg_grp2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_pre_block_op40 = ap_const_boolean_1) and (lastStream_0_almost_full_n = ap_const_logic_0)) or ((ap_predicate_pre_block_op37 = ap_const_boolean_1) and (lastStream_0_almost_full_n = ap_const_logic_0)))) then 
                ap_block_IOBlock_state2_reg_grp2 <= ap_const_boolean_1;
            else 
                ap_block_IOBlock_state2_reg_grp2 <= ap_const_boolean_0;
            end if; 
        end if;
    end process;

    ap_block_IOBlock_state2_reg_grp3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_pre_block_op46 = ap_const_boolean_1) and (lastStream_1_almost_full_n = ap_const_logic_0)) or ((ap_predicate_pre_block_op43 = ap_const_boolean_1) and (lastStream_1_almost_full_n = ap_const_logic_0)))) then 
                ap_block_IOBlock_state2_reg_grp3 <= ap_const_boolean_1;
            else 
                ap_block_IOBlock_state2_reg_grp3 <= ap_const_boolean_0;
            end if; 
        end if;
    end process;

    ii_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_260)) then
                if ((icmp_ln60_fu_132_p2 = ap_const_lv1_0)) then 
                    ii_fu_58 <= ii_2_fu_126_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    ii_fu_58 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp11_reg_256 <= cmp11_fu_144_p2;
                icmp_ln63_reg_252 <= icmp_ln63_fu_138_p2;
                ii_1_reg_242 <= ap_sig_allocacmp_ii_1;
                ii_1_reg_242_pp0_iter1_reg <= ii_1_reg_242;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1))) then
                icmp_ln70_1_reg_264 <= icmp_ln70_1_fu_211_p2;
                icmp_ln70_reg_260 <= icmp_ln70_fu_193_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln63_reg_252 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                num_fu_62 <= multicastNumStream_1_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state4_pp0_stage0_iter3_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_01001_grp1 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)));
    end process;


    ap_block_pp0_stage0_01001_grp2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_IOBlock_state2_reg_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_01001_grp2 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp2)));
    end process;


    ap_block_pp0_stage0_01001_grp3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_IOBlock_state2_reg_grp3, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_01001_grp3 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp3)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_IOBlock_state2_reg_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_IOBlock_state2_reg_grp3, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_block_state4_pp0_stage0_iter3_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3_grp1)));
    end process;


    ap_block_pp0_stage0_11001_grp0_assign_proc : process(ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_start_int)
    begin
                ap_block_pp0_stage0_11001_grp0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state4_pp0_stage0_iter3_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)));
    end process;


    ap_block_pp0_stage0_11001_grp2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_IOBlock_state2_reg_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_11001_grp2 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp2)));
    end process;


    ap_block_pp0_stage0_11001_grp3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_IOBlock_state2_reg_grp3, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_11001_grp3 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp3)));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_IOBlock_state2_reg_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_IOBlock_state2_reg_grp3, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_block_state4_pp0_stage0_iter3_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3_grp1)));
    end process;


    ap_block_pp0_stage0_subdone_grp0_assign_proc : process(ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone_grp0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state4_pp0_stage0_iter3_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone_grp1 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)));
    end process;


    ap_block_pp0_stage0_subdone_grp2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_IOBlock_state2_reg_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone_grp2 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp2)));
    end process;


    ap_block_pp0_stage0_subdone_grp3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_IOBlock_state2_reg_grp3, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone_grp3 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_IOBlock_state2_reg_grp3)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_grp1_assign_proc : process(multicastNumStream_1_empty_n, icmp_ln63_reg_252)
    begin
                ap_block_state2_pp0_stage0_iter1_grp1 <= ((icmp_ln63_reg_252 = ap_const_lv1_1) and (multicastNumStream_1_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter3_grp1_assign_proc : process(dense11Stream_0_empty_n, outputStream_0_full_n, dense11Stream_1_empty_n, outputStream_1_full_n, icmp_ln70_reg_260, icmp_ln70_1_reg_264)
    begin
                ap_block_state4_pp0_stage0_iter3_grp1 <= ((dense11Stream_1_empty_n = ap_const_logic_0) or (dense11Stream_0_empty_n = ap_const_logic_0) or ((outputStream_1_full_n = ap_const_logic_0) and (icmp_ln70_1_reg_264 = ap_const_lv1_1)) or ((outputStream_0_full_n = ap_const_logic_0) and (icmp_ln70_reg_260 = ap_const_lv1_1)));
    end process;


    ap_condition_260_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_260 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_436_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_grp2)
    begin
                ap_condition_436 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_439_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_01001_grp2)
    begin
                ap_condition_439 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_444_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_block_pp0_stage0_grp3)
    begin
                ap_condition_444 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_447_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_block_pp0_stage0_01001_grp3)
    begin
                ap_condition_447 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln60_fu_132_p2, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_fu_132_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_pre_block_op37_assign_proc : process(ap_CS_fsm_pp0_stage0, cmp11_reg_256, cmp11_fu_144_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                        ap_predicate_pre_block_op37 <= (cmp11_fu_144_p2 = ap_const_lv1_0);
        else 
                        ap_predicate_pre_block_op37 <= (cmp11_reg_256 = ap_const_lv1_0);
        end if; 
    end process;


    ap_predicate_pre_block_op40_assign_proc : process(ap_CS_fsm_pp0_stage0, cmp11_reg_256, cmp11_fu_144_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                        ap_predicate_pre_block_op40 <= (cmp11_fu_144_p2 = ap_const_lv1_1);
        else 
                        ap_predicate_pre_block_op40 <= (cmp11_reg_256 = ap_const_lv1_1);
        end if; 
    end process;


    ap_predicate_pre_block_op43_assign_proc : process(ap_CS_fsm_pp0_stage0, cmp11_reg_256, cmp11_fu_144_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                        ap_predicate_pre_block_op43 <= (cmp11_fu_144_p2 = ap_const_lv1_0);
        else 
                        ap_predicate_pre_block_op43 <= (cmp11_reg_256 = ap_const_lv1_0);
        end if; 
    end process;


    ap_predicate_pre_block_op46_assign_proc : process(ap_CS_fsm_pp0_stage0, cmp11_reg_256, cmp11_fu_144_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                        ap_predicate_pre_block_op46 <= (cmp11_fu_144_p2 = ap_const_lv1_1);
        else 
                        ap_predicate_pre_block_op46 <= (cmp11_reg_256 = ap_const_lv1_1);
        end if; 
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_ii_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ii_fu_58, ap_loop_init, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_ii_1 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_ii_1 <= ii_fu_58;
        end if; 
    end process;

    cmp11_fu_144_p2 <= "1" when (ap_sig_allocacmp_ii_1 = ap_const_lv5_F) else "0";

    dense11Stream_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, dense11Stream_0_empty_n, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dense11Stream_0_blk_n <= dense11Stream_0_empty_n;
        else 
            dense11Stream_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dense11Stream_0_read <= dense11Stream_0_read_local;

    dense11Stream_0_read_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dense11Stream_0_read_local <= ap_const_logic_1;
        else 
            dense11Stream_0_read_local <= ap_const_logic_0;
        end if; 
    end process;


    dense11Stream_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, dense11Stream_1_empty_n, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dense11Stream_1_blk_n <= dense11Stream_1_empty_n;
        else 
            dense11Stream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dense11Stream_1_read <= dense11Stream_1_read_local;

    dense11Stream_1_read_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dense11Stream_1_read_local <= ap_const_logic_1;
        else 
            dense11Stream_1_read_local <= ap_const_logic_0;
        end if; 
    end process;

    empty_66_fu_184_p2 <= std_logic_vector(shift_left(unsigned(ii_1_reg_242_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv5_1(5-1 downto 0)))));
    empty_fu_181_p1 <= ii_1_reg_242_pp0_iter1_reg(4 - 1 downto 0);
    icmp_ln60_fu_132_p2 <= "1" when (ap_sig_allocacmp_ii_1 = ap_const_lv5_10) else "0";
    icmp_ln63_fu_138_p2 <= "1" when (ap_sig_allocacmp_ii_1 = ap_const_lv5_0) else "0";
    icmp_ln70_1_fu_211_p2 <= "1" when (signed(zext_ln70_fu_207_p1) < signed(num_fu_62)) else "0";
    icmp_ln70_fu_193_p2 <= "1" when (signed(mul_cast_fu_189_p1) < signed(num_fu_62)) else "0";
    ii_2_fu_126_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_ii_1) + unsigned(ap_const_lv5_1));

    lastStream_0_blk_n_assign_proc : process(cmp11_reg_256, ap_block_IOBlock_op40_n, ap_block_IOBlock_op37_n, ap_condition_436)
    begin
        if ((ap_const_boolean_1 = ap_condition_436)) then
            if ((cmp11_reg_256 = ap_const_lv1_0)) then 
                lastStream_0_blk_n <= ap_block_IOBlock_op37_n;
            elsif ((cmp11_reg_256 = ap_const_lv1_1)) then 
                lastStream_0_blk_n <= ap_block_IOBlock_op40_n;
            else 
                lastStream_0_blk_n <= ap_const_logic_1;
            end if;
        else 
            lastStream_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lastStream_0_din <= lastStream_0_din_local;

    lastStream_0_din_local_assign_proc : process(cmp11_reg_256, ap_condition_439)
    begin
        if ((ap_const_boolean_1 = ap_condition_439)) then
            if ((cmp11_reg_256 = ap_const_lv1_1)) then 
                lastStream_0_din_local <= ap_const_lv1_1;
            elsif ((cmp11_reg_256 = ap_const_lv1_0)) then 
                lastStream_0_din_local <= ap_const_lv1_0;
            else 
                lastStream_0_din_local <= "X";
            end if;
        else 
            lastStream_0_din_local <= "X";
        end if; 
    end process;

    lastStream_0_write <= lastStream_0_write_local;

    lastStream_0_write_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, cmp11_reg_256, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_11001_grp2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp11_reg_256 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp11_reg_256 = ap_const_lv1_0)))) then 
            lastStream_0_write_local <= ap_const_logic_1;
        else 
            lastStream_0_write_local <= ap_const_logic_0;
        end if; 
    end process;


    lastStream_1_blk_n_assign_proc : process(cmp11_reg_256, ap_block_IOBlock_op43_n, ap_block_IOBlock_op46_n, ap_condition_444)
    begin
        if ((ap_const_boolean_1 = ap_condition_444)) then
            if ((cmp11_reg_256 = ap_const_lv1_1)) then 
                lastStream_1_blk_n <= ap_block_IOBlock_op46_n;
            elsif ((cmp11_reg_256 = ap_const_lv1_0)) then 
                lastStream_1_blk_n <= ap_block_IOBlock_op43_n;
            else 
                lastStream_1_blk_n <= ap_const_logic_1;
            end if;
        else 
            lastStream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lastStream_1_din <= lastStream_1_din_local;

    lastStream_1_din_local_assign_proc : process(cmp11_reg_256, ap_condition_447)
    begin
        if ((ap_const_boolean_1 = ap_condition_447)) then
            if ((cmp11_reg_256 = ap_const_lv1_1)) then 
                lastStream_1_din_local <= ap_const_lv1_1;
            elsif ((cmp11_reg_256 = ap_const_lv1_0)) then 
                lastStream_1_din_local <= ap_const_lv1_0;
            else 
                lastStream_1_din_local <= "X";
            end if;
        else 
            lastStream_1_din_local <= "X";
        end if; 
    end process;

    lastStream_1_write <= lastStream_1_write_local;

    lastStream_1_write_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, cmp11_reg_256, ap_block_pp0_stage0_subdone_grp3_done_reg, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp11_reg_256 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp3_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp11_reg_256 = ap_const_lv1_0)))) then 
            lastStream_1_write_local <= ap_const_logic_1;
        else 
            lastStream_1_write_local <= ap_const_logic_0;
        end if; 
    end process;

    mul_cast_fu_189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_66_fu_184_p2),32));

    multicastNumStream_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, multicastNumStream_1_empty_n, icmp_ln63_reg_252, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (icmp_ln63_reg_252 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            multicastNumStream_1_blk_n <= multicastNumStream_1_empty_n;
        else 
            multicastNumStream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    multicastNumStream_1_read <= multicastNumStream_1_read_local;

    multicastNumStream_1_read_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln63_reg_252, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln63_reg_252 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            multicastNumStream_1_read_local <= ap_const_logic_1;
        else 
            multicastNumStream_1_read_local <= ap_const_logic_0;
        end if; 
    end process;

    or_ln_fu_199_p3 <= (empty_fu_181_p1 & ap_const_lv1_1);

    outputStream_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, outputStream_0_full_n, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln70_reg_260, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln70_reg_260 = ap_const_lv1_1))) then 
            outputStream_0_blk_n <= outputStream_0_full_n;
        else 
            outputStream_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputStream_0_din <= dense11Stream_0_dout;
    outputStream_0_write <= outputStream_0_write_local;

    outputStream_0_write_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln70_reg_260, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln70_reg_260 = ap_const_lv1_1))) then 
            outputStream_0_write_local <= ap_const_logic_1;
        else 
            outputStream_0_write_local <= ap_const_logic_0;
        end if; 
    end process;


    outputStream_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, outputStream_1_full_n, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln70_1_reg_264, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln70_1_reg_264 = ap_const_lv1_1))) then 
            outputStream_1_blk_n <= outputStream_1_full_n;
        else 
            outputStream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputStream_1_din <= dense11Stream_1_dout;
    outputStream_1_write <= outputStream_1_write_local;

    outputStream_1_write_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln70_1_reg_264, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln70_1_reg_264 = ap_const_lv1_1))) then 
            outputStream_1_write_local <= ap_const_logic_1;
        else 
            outputStream_1_write_local <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln70_fu_207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_199_p3),32));
end behav;
