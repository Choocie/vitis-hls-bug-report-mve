// ==============================================================
// Generated by Vitis HLS v2024.2.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module harness_load_Pipeline_VITIS_LOOP_61_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY,
        m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY,
        m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST,
        m_axi_gmem0_0_RID,
        m_axi_gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER,
        m_axi_gmem0_0_RRESP,
        m_axi_gmem0_0_BVALID,
        m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP,
        m_axi_gmem0_0_BID,
        m_axi_gmem0_0_BUSER,
        inputStream_0_din,
        inputStream_0_full_n,
        inputStream_0_write,
        inputStream_0_num_data_valid,
        inputStream_0_fifo_cap,
        inputStream_1_din,
        inputStream_1_full_n,
        inputStream_1_write,
        inputStream_1_num_data_valid,
        inputStream_1_fifo_cap,
        empty_25,
        zext_ln61,
        inFeatureList,
        p_cast5_i_cast,
        empty,
        nums_1_address0,
        nums_1_ce0,
        nums_1_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_0_AWVALID;
input   m_axi_gmem0_0_AWREADY;
output  [63:0] m_axi_gmem0_0_AWADDR;
output  [0:0] m_axi_gmem0_0_AWID;
output  [31:0] m_axi_gmem0_0_AWLEN;
output  [2:0] m_axi_gmem0_0_AWSIZE;
output  [1:0] m_axi_gmem0_0_AWBURST;
output  [1:0] m_axi_gmem0_0_AWLOCK;
output  [3:0] m_axi_gmem0_0_AWCACHE;
output  [2:0] m_axi_gmem0_0_AWPROT;
output  [3:0] m_axi_gmem0_0_AWQOS;
output  [3:0] m_axi_gmem0_0_AWREGION;
output  [0:0] m_axi_gmem0_0_AWUSER;
output   m_axi_gmem0_0_WVALID;
input   m_axi_gmem0_0_WREADY;
output  [1023:0] m_axi_gmem0_0_WDATA;
output  [127:0] m_axi_gmem0_0_WSTRB;
output   m_axi_gmem0_0_WLAST;
output  [0:0] m_axi_gmem0_0_WID;
output  [0:0] m_axi_gmem0_0_WUSER;
output   m_axi_gmem0_0_ARVALID;
input   m_axi_gmem0_0_ARREADY;
output  [63:0] m_axi_gmem0_0_ARADDR;
output  [0:0] m_axi_gmem0_0_ARID;
output  [31:0] m_axi_gmem0_0_ARLEN;
output  [2:0] m_axi_gmem0_0_ARSIZE;
output  [1:0] m_axi_gmem0_0_ARBURST;
output  [1:0] m_axi_gmem0_0_ARLOCK;
output  [3:0] m_axi_gmem0_0_ARCACHE;
output  [2:0] m_axi_gmem0_0_ARPROT;
output  [3:0] m_axi_gmem0_0_ARQOS;
output  [3:0] m_axi_gmem0_0_ARREGION;
output  [0:0] m_axi_gmem0_0_ARUSER;
input   m_axi_gmem0_0_RVALID;
output   m_axi_gmem0_0_RREADY;
input  [1023:0] m_axi_gmem0_0_RDATA;
input   m_axi_gmem0_0_RLAST;
input  [0:0] m_axi_gmem0_0_RID;
input  [8:0] m_axi_gmem0_0_RFIFONUM;
input  [0:0] m_axi_gmem0_0_RUSER;
input  [1:0] m_axi_gmem0_0_RRESP;
input   m_axi_gmem0_0_BVALID;
output   m_axi_gmem0_0_BREADY;
input  [1:0] m_axi_gmem0_0_BRESP;
input  [0:0] m_axi_gmem0_0_BID;
input  [0:0] m_axi_gmem0_0_BUSER;
output  [295:0] inputStream_0_din;
input   inputStream_0_full_n;
output   inputStream_0_write;
input  [2:0] inputStream_0_num_data_valid;
input  [2:0] inputStream_0_fifo_cap;
output  [295:0] inputStream_1_din;
input   inputStream_1_full_n;
output   inputStream_1_write;
input  [2:0] inputStream_1_num_data_valid;
input  [2:0] inputStream_1_fifo_cap;
input  [31:0] empty_25;
input  [9:0] zext_ln61;
input  [63:0] inFeatureList;
input  [1:0] p_cast5_i_cast;
input  [6:0] empty;
output  [12:0] nums_1_address0;
output   nums_1_ce0;
input  [31:0] nums_1_q0;

reg ap_idle;
reg m_axi_gmem0_0_ARVALID;
reg m_axi_gmem0_0_RREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln61_reg_1482;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter25_reg;
reg   [0:0] empty_54_reg_1478;
reg    ap_predicate_op202_read_state78;
reg    ap_block_state78_pp0_stage2_iter25_grp4;
reg    ap_block_pp0_stage2_subdone_grp4_done_reg;
reg    ap_block_pp0_stage2_subdone_grp4;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage2_subdone_grp5_done_reg;
reg    ap_block_pp0_stage2_subdone_grp5;
reg   [0:0] icmp_ln67_reg_1528;
reg   [0:0] icmp_ln67_1_reg_1532;
reg    ap_block_state81_pp0_stage2_iter26_grp5;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp1;
reg    gmem0_blk_n_R;
wire    ap_block_pp0_stage0_grp2;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter24_reg;
wire    ap_block_pp0_stage2_grp4;
reg    inputStream_0_blk_n;
wire    ap_block_pp0_stage2_grp5;
reg    inputStream_1_blk_n;
wire   [63:0] p_cast5_i_cast_cast_fu_473_p1;
reg   [63:0] p_cast5_i_cast_cast_reg_1467;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_subdone;
wire   [2191:0] zext_ln61_cast_fu_477_p1;
reg   [2191:0] zext_ln61_cast_reg_1473;
wire   [0:0] empty_54_fu_481_p2;
reg    ap_block_state76_pp0_stage0_iter25_grp2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln61_fu_505_p2;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter1_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter2_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter3_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter4_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter5_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter6_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter7_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter8_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter9_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter10_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter11_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter12_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter13_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter14_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter15_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter16_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter17_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter18_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter19_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter20_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter21_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter22_reg;
reg   [0:0] icmp_ln61_reg_1482_pp0_iter23_reg;
reg   [12:0] lshr_ln_reg_1486;
reg   [12:0] lshr_ln_reg_1486_pp0_iter1_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter2_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter3_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter4_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter5_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter6_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter7_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter8_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter9_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter10_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter11_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter12_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter13_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter14_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter15_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter16_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter17_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter18_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter19_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter20_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter21_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter22_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter23_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter24_reg;
reg   [12:0] lshr_ln_reg_1486_pp0_iter25_reg;
reg   [56:0] trunc_ln6_reg_1491;
wire   [3:0] empty_55_fu_549_p1;
reg   [3:0] empty_55_reg_1496;
reg   [3:0] empty_55_reg_1496_pp0_iter1_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter2_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter3_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter4_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter5_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter6_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter7_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter8_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter9_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter10_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter11_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter12_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter13_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter14_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter15_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter16_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter17_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter18_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter19_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter20_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter21_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter22_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter23_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter24_reg;
reg   [3:0] empty_55_reg_1496_pp0_iter25_reg;
reg    ap_block_state2_io_grp1;
reg    ap_block_state77_pp0_stage1_iter25_grp1;
reg    ap_block_pp0_stage1_11001_grp1;
reg   [1023:0] gmem0_addr_read_reg_1508;
reg    ap_block_pp0_stage0_11001_grp2;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
wire    ap_block_pp0_stage1_subdone_grp0;
reg    ap_block_pp0_stage1_subdone;
reg   [1023:0] gmem0_addr_read_1_reg_1518;
wire   [143:0] trunc_ln65_fu_583_p1;
reg    ap_block_pp0_stage2_11001_grp4;
wire   [0:0] icmp_ln67_fu_598_p2;
reg    ap_block_pp0_stage2_11001_grp5;
wire   [0:0] icmp_ln67_1_fu_615_p2;
wire   [7:0] trunc_ln70_fu_634_p1;
reg   [7:0] trunc_ln70_reg_1541;
reg   [7:0] tmp_reg_1546;
reg   [7:0] tmp_3_reg_1551;
reg   [7:0] tmp_5_reg_1556;
reg   [7:0] tmp_6_reg_1561;
reg   [7:0] tmp_7_reg_1566;
reg   [7:0] tmp_8_reg_1571;
reg   [7:0] tmp_9_reg_1576;
reg   [7:0] tmp_s_reg_1581;
reg   [7:0] tmp_1_reg_1586;
reg   [7:0] tmp_2_reg_1591;
reg   [7:0] tmp_4_reg_1596;
reg   [7:0] tmp_10_reg_1601;
reg   [7:0] tmp_11_reg_1606;
reg   [7:0] tmp_12_reg_1611;
reg   [7:0] tmp_13_reg_1616;
reg   [7:0] tmp_14_reg_1621;
reg   [7:0] tmp_15_reg_1626;
reg   [7:0] tmp_16_reg_1631;
reg   [7:0] tmp_17_reg_1636;
reg   [7:0] tmp_18_reg_1641;
reg   [7:0] tmp_19_reg_1646;
reg   [7:0] tmp_20_reg_1651;
reg   [7:0] tmp_21_reg_1656;
reg   [7:0] tmp_22_reg_1661;
reg   [7:0] tmp_23_reg_1666;
reg   [7:0] tmp_24_reg_1671;
reg   [7:0] tmp_25_reg_1676;
reg   [7:0] tmp_26_reg_1681;
reg   [7:0] tmp_27_reg_1686;
reg   [7:0] tmp_28_reg_1691;
reg   [7:0] tmp_29_reg_1696;
reg   [7:0] tmp_30_reg_1701;
reg   [7:0] tmp_31_reg_1706;
reg   [7:0] tmp_32_reg_1711;
reg   [7:0] tmp_33_reg_1716;
reg   [7:0] tmp_34_reg_1721;
reg   [7:0] trunc_ln70_36_i_reg_1726;
reg   [7:0] tmp_3_i_reg_1731;
reg   [7:0] tmp_4_i_reg_1736;
reg   [7:0] tmp_5_i_reg_1741;
reg   [7:0] tmp_6_i_reg_1746;
reg   [7:0] tmp_7_i_reg_1751;
reg   [7:0] tmp_8_i_reg_1756;
reg   [7:0] tmp_9_i_reg_1761;
reg   [7:0] tmp_10_i_reg_1766;
reg   [7:0] tmp_11_i_reg_1771;
reg   [7:0] tmp_12_i_reg_1776;
reg   [7:0] tmp_13_i_reg_1781;
reg   [7:0] tmp_14_i_reg_1786;
reg   [7:0] tmp_15_i_reg_1791;
reg   [7:0] tmp_16_i_reg_1796;
reg   [7:0] tmp_17_i_reg_1801;
reg   [7:0] tmp_18_i_reg_1806;
reg   [7:0] tmp_19_i_reg_1811;
reg   [7:0] tmp_20_i_reg_1816;
reg   [7:0] tmp_21_i_reg_1821;
reg   [7:0] tmp_22_i_reg_1826;
reg   [7:0] tmp_23_i_reg_1831;
reg   [7:0] tmp_24_i_reg_1836;
reg   [7:0] tmp_25_i_reg_1841;
reg   [7:0] tmp_26_i_reg_1846;
reg   [7:0] tmp_27_i_reg_1851;
reg   [7:0] tmp_28_i_reg_1856;
reg   [7:0] tmp_29_i_reg_1861;
reg   [7:0] tmp_30_i_reg_1866;
reg   [7:0] tmp_31_i_reg_1871;
reg   [7:0] tmp_32_i_reg_1876;
reg   [7:0] tmp_33_i_reg_1881;
reg   [7:0] tmp_34_i_reg_1886;
reg   [7:0] tmp_35_i_reg_1891;
reg   [7:0] tmp_36_i_reg_1896;
reg   [7:0] tmp_37_i_reg_1901;
reg   [7:0] tmp_38_i_reg_1906;
wire   [143:0] ap_phi_reg_pp0_iter0_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter1_phi_ln65_reg_460;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
wire    ap_block_pp0_stage2_subdone_grp0;
reg   [143:0] ap_phi_reg_pp0_iter2_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter3_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter4_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter5_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter6_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter7_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter8_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter9_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter10_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter11_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter12_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter13_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter14_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter15_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter16_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter17_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter18_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter19_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter20_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter21_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter22_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter23_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter24_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter25_phi_ln65_reg_460;
reg   [143:0] ap_phi_reg_pp0_iter26_phi_ln65_reg_460;
wire   [63:0] zext_ln63_fu_575_p1;
wire    ap_block_pp0_stage1_grp0;
wire  signed [63:0] sext_ln65_fu_558_p1;
reg   [30:0] i_fu_388;
wire   [30:0] add_ln61_fu_495_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_i_2;
wire    ap_block_pp0_stage0;
wire   [295:0] or_ln72_i_fu_1368_p38;
reg    ap_block_pp0_stage2_01001_grp5;
reg    inputStream_0_write_local;
wire   [295:0] or_ln72_36_i_fu_1414_p38;
reg    inputStream_1_write_local;
reg    nums_1_ce0_local;
wire    ap_block_pp0_stage0_grp0;
wire   [31:0] zext_ln61_1_fu_501_p1;
wire   [38:0] shl_ln1_fu_521_p3;
wire   [63:0] zext_ln65_fu_529_p1;
wire   [63:0] add_ln65_fu_533_p2;
wire   [4:0] rem_i_fu_587_p3;
wire   [31:0] zext_ln67_fu_594_p1;
wire   [4:0] or_ln_fu_604_p3;
wire   [31:0] zext_ln67_1_fu_611_p1;
wire   [2191:0] grp_fu_629_p0;
wire   [2191:0] grp_fu_629_p2;
reg    grp_fu_629_ce;
reg    ap_block_pp0_stage1_11001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_block_pp0_stage2_11001;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to26;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_1776;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp5_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 i_fu_388 = 31'd0;
#0 ap_done_reg = 1'b0;
end

harness_lshr_2192ns_10ns_2192_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 2192 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 2192 ))
lshr_2192ns_10ns_2192_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_629_p0),
    .din1(zext_ln61_cast_reg_1473),
    .ce(grp_fu_629_ce),
    .dout(grp_fu_629_p2)
);

harness_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp4)) begin
                ap_block_pp0_stage2_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp5)) begin
                ap_block_pp0_stage2_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter25_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        if ((1'b1 == ap_condition_1776)) begin
            ap_phi_reg_pp0_iter26_phi_ln65_reg_460 <= trunc_ln65_fu_583_p1;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
            ap_phi_reg_pp0_iter26_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter25_phi_ln65_reg_460;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln61_fu_505_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_388 <= add_ln61_fu_495_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_388 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter10_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter9_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter11_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter10_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter12_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter11_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter13_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter12_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter14_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter13_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter15_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter14_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter16_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter15_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter17_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter16_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter18_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter17_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter19_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter18_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter1_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter0_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter20_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter19_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter21_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter20_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter22_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter21_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter23_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter22_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter24_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter23_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter25_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter24_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter2_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter1_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter3_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter2_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter4_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter3_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter5_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter4_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter6_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter5_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter7_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter6_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter8_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter7_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        ap_phi_reg_pp0_iter9_phi_ln65_reg_460 <= ap_phi_reg_pp0_iter8_phi_ln65_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_54_reg_1478 <= empty_54_fu_481_p2;
        empty_55_reg_1496 <= empty_55_fu_549_p1;
        empty_55_reg_1496_pp0_iter10_reg <= empty_55_reg_1496_pp0_iter9_reg;
        empty_55_reg_1496_pp0_iter11_reg <= empty_55_reg_1496_pp0_iter10_reg;
        empty_55_reg_1496_pp0_iter12_reg <= empty_55_reg_1496_pp0_iter11_reg;
        empty_55_reg_1496_pp0_iter13_reg <= empty_55_reg_1496_pp0_iter12_reg;
        empty_55_reg_1496_pp0_iter14_reg <= empty_55_reg_1496_pp0_iter13_reg;
        empty_55_reg_1496_pp0_iter15_reg <= empty_55_reg_1496_pp0_iter14_reg;
        empty_55_reg_1496_pp0_iter16_reg <= empty_55_reg_1496_pp0_iter15_reg;
        empty_55_reg_1496_pp0_iter17_reg <= empty_55_reg_1496_pp0_iter16_reg;
        empty_55_reg_1496_pp0_iter18_reg <= empty_55_reg_1496_pp0_iter17_reg;
        empty_55_reg_1496_pp0_iter19_reg <= empty_55_reg_1496_pp0_iter18_reg;
        empty_55_reg_1496_pp0_iter1_reg <= empty_55_reg_1496;
        empty_55_reg_1496_pp0_iter20_reg <= empty_55_reg_1496_pp0_iter19_reg;
        empty_55_reg_1496_pp0_iter21_reg <= empty_55_reg_1496_pp0_iter20_reg;
        empty_55_reg_1496_pp0_iter22_reg <= empty_55_reg_1496_pp0_iter21_reg;
        empty_55_reg_1496_pp0_iter23_reg <= empty_55_reg_1496_pp0_iter22_reg;
        empty_55_reg_1496_pp0_iter24_reg <= empty_55_reg_1496_pp0_iter23_reg;
        empty_55_reg_1496_pp0_iter25_reg <= empty_55_reg_1496_pp0_iter24_reg;
        empty_55_reg_1496_pp0_iter2_reg <= empty_55_reg_1496_pp0_iter1_reg;
        empty_55_reg_1496_pp0_iter3_reg <= empty_55_reg_1496_pp0_iter2_reg;
        empty_55_reg_1496_pp0_iter4_reg <= empty_55_reg_1496_pp0_iter3_reg;
        empty_55_reg_1496_pp0_iter5_reg <= empty_55_reg_1496_pp0_iter4_reg;
        empty_55_reg_1496_pp0_iter6_reg <= empty_55_reg_1496_pp0_iter5_reg;
        empty_55_reg_1496_pp0_iter7_reg <= empty_55_reg_1496_pp0_iter6_reg;
        empty_55_reg_1496_pp0_iter8_reg <= empty_55_reg_1496_pp0_iter7_reg;
        empty_55_reg_1496_pp0_iter9_reg <= empty_55_reg_1496_pp0_iter8_reg;
        icmp_ln61_reg_1482 <= icmp_ln61_fu_505_p2;
        icmp_ln61_reg_1482_pp0_iter10_reg <= icmp_ln61_reg_1482_pp0_iter9_reg;
        icmp_ln61_reg_1482_pp0_iter11_reg <= icmp_ln61_reg_1482_pp0_iter10_reg;
        icmp_ln61_reg_1482_pp0_iter12_reg <= icmp_ln61_reg_1482_pp0_iter11_reg;
        icmp_ln61_reg_1482_pp0_iter13_reg <= icmp_ln61_reg_1482_pp0_iter12_reg;
        icmp_ln61_reg_1482_pp0_iter14_reg <= icmp_ln61_reg_1482_pp0_iter13_reg;
        icmp_ln61_reg_1482_pp0_iter15_reg <= icmp_ln61_reg_1482_pp0_iter14_reg;
        icmp_ln61_reg_1482_pp0_iter16_reg <= icmp_ln61_reg_1482_pp0_iter15_reg;
        icmp_ln61_reg_1482_pp0_iter17_reg <= icmp_ln61_reg_1482_pp0_iter16_reg;
        icmp_ln61_reg_1482_pp0_iter18_reg <= icmp_ln61_reg_1482_pp0_iter17_reg;
        icmp_ln61_reg_1482_pp0_iter19_reg <= icmp_ln61_reg_1482_pp0_iter18_reg;
        icmp_ln61_reg_1482_pp0_iter1_reg <= icmp_ln61_reg_1482;
        icmp_ln61_reg_1482_pp0_iter20_reg <= icmp_ln61_reg_1482_pp0_iter19_reg;
        icmp_ln61_reg_1482_pp0_iter21_reg <= icmp_ln61_reg_1482_pp0_iter20_reg;
        icmp_ln61_reg_1482_pp0_iter22_reg <= icmp_ln61_reg_1482_pp0_iter21_reg;
        icmp_ln61_reg_1482_pp0_iter23_reg <= icmp_ln61_reg_1482_pp0_iter22_reg;
        icmp_ln61_reg_1482_pp0_iter24_reg <= icmp_ln61_reg_1482_pp0_iter23_reg;
        icmp_ln61_reg_1482_pp0_iter25_reg <= icmp_ln61_reg_1482_pp0_iter24_reg;
        icmp_ln61_reg_1482_pp0_iter2_reg <= icmp_ln61_reg_1482_pp0_iter1_reg;
        icmp_ln61_reg_1482_pp0_iter3_reg <= icmp_ln61_reg_1482_pp0_iter2_reg;
        icmp_ln61_reg_1482_pp0_iter4_reg <= icmp_ln61_reg_1482_pp0_iter3_reg;
        icmp_ln61_reg_1482_pp0_iter5_reg <= icmp_ln61_reg_1482_pp0_iter4_reg;
        icmp_ln61_reg_1482_pp0_iter6_reg <= icmp_ln61_reg_1482_pp0_iter5_reg;
        icmp_ln61_reg_1482_pp0_iter7_reg <= icmp_ln61_reg_1482_pp0_iter6_reg;
        icmp_ln61_reg_1482_pp0_iter8_reg <= icmp_ln61_reg_1482_pp0_iter7_reg;
        icmp_ln61_reg_1482_pp0_iter9_reg <= icmp_ln61_reg_1482_pp0_iter8_reg;
        lshr_ln_reg_1486 <= {{ap_sig_allocacmp_i_2[16:4]}};
        lshr_ln_reg_1486_pp0_iter10_reg <= lshr_ln_reg_1486_pp0_iter9_reg;
        lshr_ln_reg_1486_pp0_iter11_reg <= lshr_ln_reg_1486_pp0_iter10_reg;
        lshr_ln_reg_1486_pp0_iter12_reg <= lshr_ln_reg_1486_pp0_iter11_reg;
        lshr_ln_reg_1486_pp0_iter13_reg <= lshr_ln_reg_1486_pp0_iter12_reg;
        lshr_ln_reg_1486_pp0_iter14_reg <= lshr_ln_reg_1486_pp0_iter13_reg;
        lshr_ln_reg_1486_pp0_iter15_reg <= lshr_ln_reg_1486_pp0_iter14_reg;
        lshr_ln_reg_1486_pp0_iter16_reg <= lshr_ln_reg_1486_pp0_iter15_reg;
        lshr_ln_reg_1486_pp0_iter17_reg <= lshr_ln_reg_1486_pp0_iter16_reg;
        lshr_ln_reg_1486_pp0_iter18_reg <= lshr_ln_reg_1486_pp0_iter17_reg;
        lshr_ln_reg_1486_pp0_iter19_reg <= lshr_ln_reg_1486_pp0_iter18_reg;
        lshr_ln_reg_1486_pp0_iter1_reg <= lshr_ln_reg_1486;
        lshr_ln_reg_1486_pp0_iter20_reg <= lshr_ln_reg_1486_pp0_iter19_reg;
        lshr_ln_reg_1486_pp0_iter21_reg <= lshr_ln_reg_1486_pp0_iter20_reg;
        lshr_ln_reg_1486_pp0_iter22_reg <= lshr_ln_reg_1486_pp0_iter21_reg;
        lshr_ln_reg_1486_pp0_iter23_reg <= lshr_ln_reg_1486_pp0_iter22_reg;
        lshr_ln_reg_1486_pp0_iter24_reg <= lshr_ln_reg_1486_pp0_iter23_reg;
        lshr_ln_reg_1486_pp0_iter25_reg <= lshr_ln_reg_1486_pp0_iter24_reg;
        lshr_ln_reg_1486_pp0_iter2_reg <= lshr_ln_reg_1486_pp0_iter1_reg;
        lshr_ln_reg_1486_pp0_iter3_reg <= lshr_ln_reg_1486_pp0_iter2_reg;
        lshr_ln_reg_1486_pp0_iter4_reg <= lshr_ln_reg_1486_pp0_iter3_reg;
        lshr_ln_reg_1486_pp0_iter5_reg <= lshr_ln_reg_1486_pp0_iter4_reg;
        lshr_ln_reg_1486_pp0_iter6_reg <= lshr_ln_reg_1486_pp0_iter5_reg;
        lshr_ln_reg_1486_pp0_iter7_reg <= lshr_ln_reg_1486_pp0_iter6_reg;
        lshr_ln_reg_1486_pp0_iter8_reg <= lshr_ln_reg_1486_pp0_iter7_reg;
        lshr_ln_reg_1486_pp0_iter9_reg <= lshr_ln_reg_1486_pp0_iter8_reg;
        trunc_ln6_reg_1491 <= {{add_ln65_fu_533_p2[63:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp1))) begin
        gmem0_addr_read_1_reg_1518 <= m_axi_gmem0_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp2))) begin
        gmem0_addr_read_reg_1508 <= m_axi_gmem0_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg))) begin
        icmp_ln67_1_reg_1532 <= icmp_ln67_1_fu_615_p2;
        icmp_ln67_reg_1528 <= icmp_ln67_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        p_cast5_i_cast_cast_reg_1467[1 : 0] <= p_cast5_i_cast_cast_fu_473_p1[1 : 0];
        zext_ln61_cast_reg_1473[9 : 0] <= zext_ln61_cast_fu_477_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        tmp_10_i_reg_1766 <= {{grp_fu_629_p2[727:720]}};
        tmp_10_reg_1601 <= {{grp_fu_629_p2[199:192]}};
        tmp_11_i_reg_1771 <= {{grp_fu_629_p2[743:736]}};
        tmp_11_reg_1606 <= {{grp_fu_629_p2[215:208]}};
        tmp_12_i_reg_1776 <= {{grp_fu_629_p2[759:752]}};
        tmp_12_reg_1611 <= {{grp_fu_629_p2[231:224]}};
        tmp_13_i_reg_1781 <= {{grp_fu_629_p2[775:768]}};
        tmp_13_reg_1616 <= {{grp_fu_629_p2[247:240]}};
        tmp_14_i_reg_1786 <= {{grp_fu_629_p2[791:784]}};
        tmp_14_reg_1621 <= {{grp_fu_629_p2[263:256]}};
        tmp_15_i_reg_1791 <= {{grp_fu_629_p2[807:800]}};
        tmp_15_reg_1626 <= {{grp_fu_629_p2[279:272]}};
        tmp_16_i_reg_1796 <= {{grp_fu_629_p2[823:816]}};
        tmp_16_reg_1631 <= {{grp_fu_629_p2[295:288]}};
        tmp_17_i_reg_1801 <= {{grp_fu_629_p2[839:832]}};
        tmp_17_reg_1636 <= {{grp_fu_629_p2[311:304]}};
        tmp_18_i_reg_1806 <= {{grp_fu_629_p2[855:848]}};
        tmp_18_reg_1641 <= {{grp_fu_629_p2[327:320]}};
        tmp_19_i_reg_1811 <= {{grp_fu_629_p2[871:864]}};
        tmp_19_reg_1646 <= {{grp_fu_629_p2[343:336]}};
        tmp_1_reg_1586 <= {{grp_fu_629_p2[151:144]}};
        tmp_20_i_reg_1816 <= {{grp_fu_629_p2[887:880]}};
        tmp_20_reg_1651 <= {{grp_fu_629_p2[359:352]}};
        tmp_21_i_reg_1821 <= {{grp_fu_629_p2[903:896]}};
        tmp_21_reg_1656 <= {{grp_fu_629_p2[375:368]}};
        tmp_22_i_reg_1826 <= {{grp_fu_629_p2[919:912]}};
        tmp_22_reg_1661 <= {{grp_fu_629_p2[391:384]}};
        tmp_23_i_reg_1831 <= {{grp_fu_629_p2[935:928]}};
        tmp_23_reg_1666 <= {{grp_fu_629_p2[407:400]}};
        tmp_24_i_reg_1836 <= {{grp_fu_629_p2[951:944]}};
        tmp_24_reg_1671 <= {{grp_fu_629_p2[423:416]}};
        tmp_25_i_reg_1841 <= {{grp_fu_629_p2[967:960]}};
        tmp_25_reg_1676 <= {{grp_fu_629_p2[439:432]}};
        tmp_26_i_reg_1846 <= {{grp_fu_629_p2[983:976]}};
        tmp_26_reg_1681 <= {{grp_fu_629_p2[455:448]}};
        tmp_27_i_reg_1851 <= {{grp_fu_629_p2[999:992]}};
        tmp_27_reg_1686 <= {{grp_fu_629_p2[471:464]}};
        tmp_28_i_reg_1856 <= {{grp_fu_629_p2[1015:1008]}};
        tmp_28_reg_1691 <= {{grp_fu_629_p2[487:480]}};
        tmp_29_i_reg_1861 <= {{grp_fu_629_p2[1031:1024]}};
        tmp_29_reg_1696 <= {{grp_fu_629_p2[503:496]}};
        tmp_2_reg_1591 <= {{grp_fu_629_p2[167:160]}};
        tmp_30_i_reg_1866 <= {{grp_fu_629_p2[1047:1040]}};
        tmp_30_reg_1701 <= {{grp_fu_629_p2[519:512]}};
        tmp_31_i_reg_1871 <= {{grp_fu_629_p2[1063:1056]}};
        tmp_31_reg_1706 <= {{grp_fu_629_p2[535:528]}};
        tmp_32_i_reg_1876 <= {{grp_fu_629_p2[1079:1072]}};
        tmp_32_reg_1711 <= {{grp_fu_629_p2[551:544]}};
        tmp_33_i_reg_1881 <= {{grp_fu_629_p2[1095:1088]}};
        tmp_33_reg_1716 <= {{grp_fu_629_p2[567:560]}};
        tmp_34_i_reg_1886 <= {{grp_fu_629_p2[1111:1104]}};
        tmp_34_reg_1721 <= {{grp_fu_629_p2[583:576]}};
        tmp_35_i_reg_1891 <= {{grp_fu_629_p2[1127:1120]}};
        tmp_36_i_reg_1896 <= {{grp_fu_629_p2[1143:1136]}};
        tmp_37_i_reg_1901 <= {{grp_fu_629_p2[1159:1152]}};
        tmp_38_i_reg_1906 <= {{grp_fu_629_p2[1175:1168]}};
        tmp_3_i_reg_1731 <= {{grp_fu_629_p2[615:608]}};
        tmp_3_reg_1551 <= {{grp_fu_629_p2[23:16]}};
        tmp_4_i_reg_1736 <= {{grp_fu_629_p2[631:624]}};
        tmp_4_reg_1596 <= {{grp_fu_629_p2[183:176]}};
        tmp_5_i_reg_1741 <= {{grp_fu_629_p2[647:640]}};
        tmp_5_reg_1556 <= {{grp_fu_629_p2[55:48]}};
        tmp_6_i_reg_1746 <= {{grp_fu_629_p2[663:656]}};
        tmp_6_reg_1561 <= {{grp_fu_629_p2[71:64]}};
        tmp_7_i_reg_1751 <= {{grp_fu_629_p2[679:672]}};
        tmp_7_reg_1566 <= {{grp_fu_629_p2[87:80]}};
        tmp_8_i_reg_1756 <= {{grp_fu_629_p2[695:688]}};
        tmp_8_reg_1571 <= {{grp_fu_629_p2[103:96]}};
        tmp_9_i_reg_1761 <= {{grp_fu_629_p2[711:704]}};
        tmp_9_reg_1576 <= {{grp_fu_629_p2[119:112]}};
        tmp_reg_1546 <= {{grp_fu_629_p2[39:32]}};
        tmp_s_reg_1581 <= {{grp_fu_629_p2[135:128]}};
        trunc_ln70_36_i_reg_1726 <= {{grp_fu_629_p2[599:592]}};
        trunc_ln70_reg_1541 <= trunc_ln70_fu_634_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln61_reg_1482 == 1'd0))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter25_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter25_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter24_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter23_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter22_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter21_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter19_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg 
    == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to26 = 1'b1;
    end else begin
        ap_idle_pp0_1to26 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 31'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_388;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp1) & (icmp_ln61_reg_1482 == 1'd1))) begin
        gmem0_blk_n_AR = m_axi_gmem0_0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (icmp_ln61_reg_1482_pp0_iter24_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp2)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp1) & (icmp_ln61_reg_1482_pp0_iter25_reg == 1'd1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_predicate_op202_read_state78 == 1'b1)))) begin
        gmem0_blk_n_R = m_axi_gmem0_0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)))) begin
        grp_fu_629_ce = 1'b1;
    end else begin
        grp_fu_629_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln67_reg_1528 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg))) begin
        inputStream_0_blk_n = inputStream_0_full_n;
    end else begin
        inputStream_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln67_reg_1528 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg))) begin
        inputStream_0_write_local = 1'b1;
    end else begin
        inputStream_0_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln67_1_reg_1532 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg))) begin
        inputStream_1_blk_n = inputStream_1_full_n;
    end else begin
        inputStream_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln67_1_reg_1532 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg))) begin
        inputStream_1_write_local = 1'b1;
    end else begin
        inputStream_1_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (icmp_ln61_reg_1482 == 1'd1))) begin
        m_axi_gmem0_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (icmp_ln61_reg_1482_pp0_iter24_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp2)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (icmp_ln61_reg_1482_pp0_iter25_reg == 1'd1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (ap_predicate_op202_read_state78 == 1'b1)))) begin
        m_axi_gmem0_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (icmp_ln61_reg_1482_pp0_iter25_reg == 1'd1))) begin
        nums_1_ce0_local = 1'b1;
    end else begin
        nums_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to26 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln61_fu_495_p2 = (ap_sig_allocacmp_i_2 + 31'd1);

assign add_ln65_fu_533_p2 = (zext_ln65_fu_529_p1 + inFeatureList);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25_grp2));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp2 = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25_grp2));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25_grp2));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state2_io_grp1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage1_iter25_grp1)));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp1 = (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state2_io_grp1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage1_iter25_grp1)));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state2_io_grp1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage1_iter25_grp1)));
end

assign ap_block_pp0_stage1_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001_grp5 = ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage2_iter26_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage2_iter26_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage2_iter25_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg)));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp4 = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage2_iter25_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp5 = ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage2_iter26_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg));
end

assign ap_block_pp0_stage2_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage2_iter26_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage2_iter25_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg)));
end

assign ap_block_pp0_stage2_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp4 = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage2_iter25_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp5 = ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage2_iter26_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_state2_io_grp1 = ((icmp_ln61_reg_1482 == 1'd1) & (m_axi_gmem0_0_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state76_pp0_stage0_iter25_grp2 = ((icmp_ln61_reg_1482_pp0_iter24_reg == 1'd1) & (m_axi_gmem0_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state77_pp0_stage1_iter25_grp1 = ((icmp_ln61_reg_1482_pp0_iter25_reg == 1'd1) & (m_axi_gmem0_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state78_pp0_stage2_iter25_grp4 = ((ap_predicate_op202_read_state78 == 1'b1) & (m_axi_gmem0_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state81_pp0_stage2_iter26_grp5 = (((icmp_ln67_1_reg_1532 == 1'd1) & (inputStream_1_full_n == 1'b0)) | ((icmp_ln67_reg_1528 == 1'd1) & (inputStream_0_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_1776 = ((1'b0 == ap_block_pp0_stage2_11001_grp4) & (1'b0 == ap_block_pp0_stage2_subdone_grp4_done_reg) & (empty_54_reg_1478 == 1'd0) & (icmp_ln61_reg_1482_pp0_iter25_reg == 1'd1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_phi_ln65_reg_460 = 'bx;

always @ (*) begin
    ap_predicate_op202_read_state78 = ((empty_54_reg_1478 == 1'd0) & (icmp_ln61_reg_1482_pp0_iter25_reg == 1'd1));
end

assign ap_ready = ap_ready_sig;

assign empty_54_fu_481_p2 = ((empty == 7'd0) ? 1'b1 : 1'b0);

assign empty_55_fu_549_p1 = ap_sig_allocacmp_i_2[3:0];

assign grp_fu_629_p0 = {{{ap_phi_reg_pp0_iter26_phi_ln65_reg_460}, {gmem0_addr_read_1_reg_1518}}, {gmem0_addr_read_reg_1508}};

assign icmp_ln61_fu_505_p2 = (($signed(zext_ln61_1_fu_501_p1) < $signed(empty_25)) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_615_p2 = (($signed(zext_ln67_1_fu_611_p1) < $signed(nums_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_598_p2 = (($signed(zext_ln67_fu_594_p1) < $signed(nums_1_q0)) ? 1'b1 : 1'b0);

assign inputStream_0_din = or_ln72_i_fu_1368_p38;

assign inputStream_0_write = inputStream_0_write_local;

assign inputStream_1_din = or_ln72_36_i_fu_1414_p38;

assign inputStream_1_write = inputStream_1_write_local;

assign m_axi_gmem0_0_ARADDR = sext_ln65_fu_558_p1;

assign m_axi_gmem0_0_ARBURST = 2'd0;

assign m_axi_gmem0_0_ARCACHE = 4'd0;

assign m_axi_gmem0_0_ARID = 1'd0;

assign m_axi_gmem0_0_ARLEN = p_cast5_i_cast_cast_reg_1467;

assign m_axi_gmem0_0_ARLOCK = 2'd0;

assign m_axi_gmem0_0_ARPROT = 3'd0;

assign m_axi_gmem0_0_ARQOS = 4'd0;

assign m_axi_gmem0_0_ARREGION = 4'd0;

assign m_axi_gmem0_0_ARSIZE = 3'd0;

assign m_axi_gmem0_0_ARUSER = 1'd0;

assign m_axi_gmem0_0_AWADDR = 64'd0;

assign m_axi_gmem0_0_AWBURST = 2'd0;

assign m_axi_gmem0_0_AWCACHE = 4'd0;

assign m_axi_gmem0_0_AWID = 1'd0;

assign m_axi_gmem0_0_AWLEN = 32'd0;

assign m_axi_gmem0_0_AWLOCK = 2'd0;

assign m_axi_gmem0_0_AWPROT = 3'd0;

assign m_axi_gmem0_0_AWQOS = 4'd0;

assign m_axi_gmem0_0_AWREGION = 4'd0;

assign m_axi_gmem0_0_AWSIZE = 3'd0;

assign m_axi_gmem0_0_AWUSER = 1'd0;

assign m_axi_gmem0_0_AWVALID = 1'b0;

assign m_axi_gmem0_0_BREADY = 1'b0;

assign m_axi_gmem0_0_WDATA = 1024'd0;

assign m_axi_gmem0_0_WID = 1'd0;

assign m_axi_gmem0_0_WLAST = 1'b0;

assign m_axi_gmem0_0_WSTRB = 128'd0;

assign m_axi_gmem0_0_WUSER = 1'd0;

assign m_axi_gmem0_0_WVALID = 1'b0;

assign nums_1_address0 = zext_ln63_fu_575_p1;

assign nums_1_ce0 = nums_1_ce0_local;

assign or_ln72_36_i_fu_1414_p38 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_38_i_reg_1906}, {tmp_37_i_reg_1901}}, {tmp_36_i_reg_1896}}, {tmp_35_i_reg_1891}}, {tmp_34_i_reg_1886}}, {tmp_33_i_reg_1881}}, {tmp_32_i_reg_1876}}, {tmp_31_i_reg_1871}}, {tmp_30_i_reg_1866}}, {tmp_29_i_reg_1861}}, {tmp_28_i_reg_1856}}, {tmp_27_i_reg_1851}}, {tmp_26_i_reg_1846}}, {tmp_25_i_reg_1841}}, {tmp_24_i_reg_1836}}, {tmp_23_i_reg_1831}}, {tmp_22_i_reg_1826}}, {tmp_21_i_reg_1821}}, {tmp_20_i_reg_1816}}, {tmp_19_i_reg_1811}}, {tmp_18_i_reg_1806}}, {tmp_17_i_reg_1801}}, {tmp_16_i_reg_1796}}, {tmp_15_i_reg_1791}}, {tmp_14_i_reg_1786}}, {tmp_13_i_reg_1781}}, {tmp_12_i_reg_1776}}, {tmp_11_i_reg_1771}}, {tmp_10_i_reg_1766}}, {tmp_9_i_reg_1761}}, {tmp_8_i_reg_1756}}, {tmp_7_i_reg_1751}}, {tmp_6_i_reg_1746}}, {tmp_5_i_reg_1741}}, {tmp_4_i_reg_1736}}, {tmp_3_i_reg_1731}}, {trunc_ln70_36_i_reg_1726}};

assign or_ln72_i_fu_1368_p38 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_34_reg_1721}, {tmp_33_reg_1716}}, {tmp_32_reg_1711}}, {tmp_31_reg_1706}}, {tmp_30_reg_1701}}, {tmp_29_reg_1696}}, {tmp_28_reg_1691}}, {tmp_27_reg_1686}}, {tmp_26_reg_1681}}, {tmp_25_reg_1676}}, {tmp_24_reg_1671}}, {tmp_23_reg_1666}}, {tmp_22_reg_1661}}, {tmp_21_reg_1656}}, {tmp_20_reg_1651}}, {tmp_19_reg_1646}}, {tmp_18_reg_1641}}, {tmp_17_reg_1636}}, {tmp_16_reg_1631}}, {tmp_15_reg_1626}}, {tmp_14_reg_1621}}, {tmp_13_reg_1616}}, {tmp_12_reg_1611}}, {tmp_11_reg_1606}}, {tmp_10_reg_1601}}, {tmp_4_reg_1596}}, {tmp_2_reg_1591}}, {tmp_1_reg_1586}}, {tmp_s_reg_1581}}, {tmp_9_reg_1576}}, {tmp_8_reg_1571}}, {tmp_7_reg_1566}}, {tmp_6_reg_1561}}, {tmp_5_reg_1556}}, {tmp_reg_1546}}, {tmp_3_reg_1551}}, {trunc_ln70_reg_1541}};

assign or_ln_fu_604_p3 = {{empty_55_reg_1496_pp0_iter25_reg}, {1'd1}};

assign p_cast5_i_cast_cast_fu_473_p1 = p_cast5_i_cast;

assign rem_i_fu_587_p3 = {{empty_55_reg_1496_pp0_iter25_reg}, {1'd0}};

assign sext_ln65_fu_558_p1 = $signed(trunc_ln6_reg_1491);

assign shl_ln1_fu_521_p3 = {{ap_sig_allocacmp_i_2}, {8'd0}};

assign trunc_ln65_fu_583_p1 = m_axi_gmem0_0_RDATA[143:0];

assign trunc_ln70_fu_634_p1 = grp_fu_629_p2[7:0];

assign zext_ln61_1_fu_501_p1 = ap_sig_allocacmp_i_2;

assign zext_ln61_cast_fu_477_p1 = zext_ln61;

assign zext_ln63_fu_575_p1 = lshr_ln_reg_1486_pp0_iter25_reg;

assign zext_ln65_fu_529_p1 = shl_ln1_fu_521_p3;

assign zext_ln67_1_fu_611_p1 = or_ln_fu_604_p3;

assign zext_ln67_fu_594_p1 = rem_i_fu_587_p3;

always @ (posedge ap_clk) begin
    p_cast5_i_cast_cast_reg_1467[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    zext_ln61_cast_reg_1473[2191:10] <= 2182'b
end

endmodule //harness_load_Pipeline_VITIS_LOOP_61_2
