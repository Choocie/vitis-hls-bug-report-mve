-- ==============================================================
-- Generated by Vitis HLS v2024.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity harness_dut is
port (
    inputStream_0_dout : IN STD_LOGIC_VECTOR (295 downto 0);
    inputStream_0_empty_n : IN STD_LOGIC;
    inputStream_0_read : OUT STD_LOGIC;
    inputStream_1_dout : IN STD_LOGIC_VECTOR (295 downto 0);
    inputStream_1_empty_n : IN STD_LOGIC;
    inputStream_1_read : OUT STD_LOGIC;
    outputStream_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    outputStream_0_full_n : IN STD_LOGIC;
    outputStream_0_write : OUT STD_LOGIC;
    outputStream_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    outputStream_1_full_n : IN STD_LOGIC;
    outputStream_1_write : OUT STD_LOGIC;
    lastStream_0_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    lastStream_0_full_n : IN STD_LOGIC;
    lastStream_0_write : OUT STD_LOGIC;
    lastStream_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    lastStream_1_full_n : IN STD_LOGIC;
    lastStream_1_write : OUT STD_LOGIC;
    numStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    numStream_empty_n : IN STD_LOGIC;
    numStream_read : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    outputStream_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    outputStream_0_empty_n : IN STD_LOGIC;
    outputStream_0_read : OUT STD_LOGIC;
    outputStream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    outputStream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    outputStream_1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    outputStream_1_empty_n : IN STD_LOGIC;
    outputStream_1_read : OUT STD_LOGIC;
    outputStream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    outputStream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_0_almost_full_n : IN STD_LOGIC;
    lastStream_0_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    lastStream_0_empty_n : IN STD_LOGIC;
    lastStream_0_almost_empty_n : IN STD_LOGIC;
    lastStream_0_read : OUT STD_LOGIC;
    lastStream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_1_almost_full_n : IN STD_LOGIC;
    lastStream_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    lastStream_1_empty_n : IN STD_LOGIC;
    lastStream_1_almost_empty_n : IN STD_LOGIC;
    lastStream_1_read : OUT STD_LOGIC;
    lastStream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    lastStream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of harness_dut is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";

attribute shreg_extract : string;
    signal multicast_int_2_U0_ap_start : STD_LOGIC;
    signal multicast_int_2_U0_start_full_n : STD_LOGIC;
    signal multicast_int_2_U0_ap_done : STD_LOGIC;
    signal multicast_int_2_U0_ap_continue : STD_LOGIC;
    signal multicast_int_2_U0_ap_idle : STD_LOGIC;
    signal multicast_int_2_U0_ap_ready : STD_LOGIC;
    signal multicast_int_2_U0_start_out : STD_LOGIC;
    signal multicast_int_2_U0_start_write : STD_LOGIC;
    signal multicast_int_2_U0_numStream_read : STD_LOGIC;
    signal multicast_int_2_U0_multicastNumStream_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal multicast_int_2_U0_multicastNumStream_0_write : STD_LOGIC;
    signal multicast_int_2_U0_multicastNumStream_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal multicast_int_2_U0_multicastNumStream_1_write : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_start : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_full_n : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_done : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_continue : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_idle : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_ready : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_multicastNumStream_0_read : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_0_din : STD_LOGIC_VECTOR (295 downto 0);
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_0_write : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_inputStream_0_read : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_1_din : STD_LOGIC_VECTOR (295 downto 0);
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_1_write : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_inputStream_1_read : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_out : STD_LOGIC;
    signal padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_write : STD_LOGIC;
    signal dense_relu_saturate_U0_ap_start : STD_LOGIC;
    signal dense_relu_saturate_U0_ap_done : STD_LOGIC;
    signal dense_relu_saturate_U0_ap_continue : STD_LOGIC;
    signal dense_relu_saturate_U0_ap_idle : STD_LOGIC;
    signal dense_relu_saturate_U0_ap_ready : STD_LOGIC;
    signal dense_relu_saturate_U0_paddingStream_0_read : STD_LOGIC;
    signal dense_relu_saturate_U0_paddingStream_0_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_relu_saturate_U0_paddingStream_0_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_relu_saturate_U0_dense11Stream_0_din : STD_LOGIC_VECTOR (127 downto 0);
    signal dense_relu_saturate_U0_dense11Stream_0_write : STD_LOGIC;
    signal dense_relu_saturate_U0_dense11Stream_0_num_data_valid : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_relu_saturate_U0_dense11Stream_0_fifo_cap : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_relu_saturate_1_U0_ap_start : STD_LOGIC;
    signal dense_relu_saturate_1_U0_ap_done : STD_LOGIC;
    signal dense_relu_saturate_1_U0_ap_continue : STD_LOGIC;
    signal dense_relu_saturate_1_U0_ap_idle : STD_LOGIC;
    signal dense_relu_saturate_1_U0_ap_ready : STD_LOGIC;
    signal dense_relu_saturate_1_U0_paddingStream_1_read : STD_LOGIC;
    signal dense_relu_saturate_1_U0_paddingStream_1_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_relu_saturate_1_U0_paddingStream_1_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_relu_saturate_1_U0_dense11Stream_1_din : STD_LOGIC_VECTOR (127 downto 0);
    signal dense_relu_saturate_1_U0_dense11Stream_1_write : STD_LOGIC;
    signal dense_relu_saturate_1_U0_dense11Stream_1_num_data_valid : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_relu_saturate_1_U0_dense11Stream_1_fifo_cap : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_start : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_done : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_continue : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_idle : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_ready : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_multicastNumStream_1_read : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_0_write : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_1_din : STD_LOGIC_VECTOR (0 downto 0);
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_1_write : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dense11Stream_0_read : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_0_din : STD_LOGIC_VECTOR (127 downto 0);
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_0_write : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dense11Stream_1_read : STD_LOGIC;
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_1_din : STD_LOGIC_VECTOR (127 downto 0);
    signal filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_1_write : STD_LOGIC;
    signal multicastNumStream_full_n : STD_LOGIC;
    signal multicastNumStream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal multicastNumStream_empty_n : STD_LOGIC;
    signal multicastNumStream_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal multicastNumStream_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal multicastNumStream_1_full_n : STD_LOGIC;
    signal multicastNumStream_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal multicastNumStream_1_empty_n : STD_LOGIC;
    signal multicastNumStream_1_num_data_valid : STD_LOGIC_VECTOR (5 downto 0);
    signal multicastNumStream_1_fifo_cap : STD_LOGIC_VECTOR (5 downto 0);
    signal paddingStream_0_full_n : STD_LOGIC;
    signal paddingStream_0_almost_full_n : STD_LOGIC;
    signal paddingStream_0_dout : STD_LOGIC_VECTOR (295 downto 0);
    signal paddingStream_0_empty_n : STD_LOGIC;
    signal paddingStream_0_almost_empty_n : STD_LOGIC;
    signal paddingStream_0_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal paddingStream_0_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal paddingStream_1_full_n : STD_LOGIC;
    signal paddingStream_1_almost_full_n : STD_LOGIC;
    signal paddingStream_1_dout : STD_LOGIC_VECTOR (295 downto 0);
    signal paddingStream_1_empty_n : STD_LOGIC;
    signal paddingStream_1_almost_empty_n : STD_LOGIC;
    signal paddingStream_1_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal paddingStream_1_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal dense11Stream_0_full_n : STD_LOGIC;
    signal dense11Stream_0_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal dense11Stream_0_empty_n : STD_LOGIC;
    signal dense11Stream_0_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal dense11Stream_0_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal dense11Stream_1_full_n : STD_LOGIC;
    signal dense11Stream_1_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal dense11Stream_1_empty_n : STD_LOGIC;
    signal dense11Stream_1_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal dense11Stream_1_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_full_n : STD_LOGIC;
    signal start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_empty_n : STD_LOGIC;
    signal start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_full_n : STD_LOGIC;
    signal start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_empty_n : STD_LOGIC;
    signal start_for_dense_relu_saturate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_relu_saturate_U0_full_n : STD_LOGIC;
    signal start_for_dense_relu_saturate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_relu_saturate_U0_empty_n : STD_LOGIC;
    signal start_for_dense_relu_saturate_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_relu_saturate_1_U0_full_n : STD_LOGIC;
    signal start_for_dense_relu_saturate_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_relu_saturate_1_U0_empty_n : STD_LOGIC;

    component harness_multicast_int_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        numStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        numStream_empty_n : IN STD_LOGIC;
        numStream_read : OUT STD_LOGIC;
        numStream_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
        numStream_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0);
        multicastNumStream_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        multicastNumStream_0_full_n : IN STD_LOGIC;
        multicastNumStream_0_write : OUT STD_LOGIC;
        multicastNumStream_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        multicastNumStream_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        multicastNumStream_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        multicastNumStream_1_full_n : IN STD_LOGIC;
        multicastNumStream_1_write : OUT STD_LOGIC;
        multicastNumStream_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        multicastNumStream_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component harness_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        multicastNumStream_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        multicastNumStream_0_empty_n : IN STD_LOGIC;
        multicastNumStream_0_read : OUT STD_LOGIC;
        multicastNumStream_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        multicastNumStream_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        paddingStream_0_din : OUT STD_LOGIC_VECTOR (295 downto 0);
        paddingStream_0_full_n : IN STD_LOGIC;
        paddingStream_0_write : OUT STD_LOGIC;
        paddingStream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        paddingStream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_0_dout : IN STD_LOGIC_VECTOR (295 downto 0);
        inputStream_0_empty_n : IN STD_LOGIC;
        inputStream_0_read : OUT STD_LOGIC;
        inputStream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        paddingStream_1_din : OUT STD_LOGIC_VECTOR (295 downto 0);
        paddingStream_1_full_n : IN STD_LOGIC;
        paddingStream_1_write : OUT STD_LOGIC;
        paddingStream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        paddingStream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_1_dout : IN STD_LOGIC_VECTOR (295 downto 0);
        inputStream_1_empty_n : IN STD_LOGIC;
        inputStream_1_read : OUT STD_LOGIC;
        inputStream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        paddingStream_0_almost_full_n : IN STD_LOGIC;
        paddingStream_1_almost_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component harness_dense_relu_saturate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        paddingStream_0_dout : IN STD_LOGIC_VECTOR (295 downto 0);
        paddingStream_0_empty_n : IN STD_LOGIC;
        paddingStream_0_read : OUT STD_LOGIC;
        paddingStream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        paddingStream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        dense11Stream_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        dense11Stream_0_full_n : IN STD_LOGIC;
        dense11Stream_0_write : OUT STD_LOGIC;
        dense11Stream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        dense11Stream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component harness_dense_relu_saturate_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        paddingStream_1_dout : IN STD_LOGIC_VECTOR (295 downto 0);
        paddingStream_1_empty_n : IN STD_LOGIC;
        paddingStream_1_read : OUT STD_LOGIC;
        paddingStream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        paddingStream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        dense11Stream_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        dense11Stream_1_full_n : IN STD_LOGIC;
        dense11Stream_1_write : OUT STD_LOGIC;
        dense11Stream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        dense11Stream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component harness_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        multicastNumStream_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        multicastNumStream_1_empty_n : IN STD_LOGIC;
        multicastNumStream_1_read : OUT STD_LOGIC;
        multicastNumStream_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        multicastNumStream_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        lastStream_0_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        lastStream_0_full_n : IN STD_LOGIC;
        lastStream_0_write : OUT STD_LOGIC;
        lastStream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        lastStream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        lastStream_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        lastStream_1_full_n : IN STD_LOGIC;
        lastStream_1_write : OUT STD_LOGIC;
        lastStream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        lastStream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        dense11Stream_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        dense11Stream_0_empty_n : IN STD_LOGIC;
        dense11Stream_0_read : OUT STD_LOGIC;
        dense11Stream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        dense11Stream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        outputStream_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        outputStream_0_full_n : IN STD_LOGIC;
        outputStream_0_write : OUT STD_LOGIC;
        outputStream_0_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        outputStream_0_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        dense11Stream_1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        dense11Stream_1_empty_n : IN STD_LOGIC;
        dense11Stream_1_read : OUT STD_LOGIC;
        dense11Stream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        dense11Stream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        outputStream_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        outputStream_1_full_n : IN STD_LOGIC;
        outputStream_1_write : OUT STD_LOGIC;
        outputStream_1_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        outputStream_1_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        lastStream_0_almost_full_n : IN STD_LOGIC;
        lastStream_1_almost_full_n : IN STD_LOGIC );
    end component;


    component harness_fifo_w32_d32_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component harness_fifo_w296_d4_A_with_almost IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (295 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_almost_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (295 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_almost_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component harness_fifo_w128_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component harness_start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component harness_start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component harness_start_for_dense_relu_saturate_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component harness_start_for_dense_relu_saturate_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    multicast_int_2_U0 : component harness_multicast_int_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => multicast_int_2_U0_ap_start,
        start_full_n => multicast_int_2_U0_start_full_n,
        ap_done => multicast_int_2_U0_ap_done,
        ap_continue => multicast_int_2_U0_ap_continue,
        ap_idle => multicast_int_2_U0_ap_idle,
        ap_ready => multicast_int_2_U0_ap_ready,
        start_out => multicast_int_2_U0_start_out,
        start_write => multicast_int_2_U0_start_write,
        numStream_dout => numStream_dout,
        numStream_empty_n => numStream_empty_n,
        numStream_read => multicast_int_2_U0_numStream_read,
        numStream_num_data_valid => ap_const_lv14_0,
        numStream_fifo_cap => ap_const_lv14_0,
        multicastNumStream_0_din => multicast_int_2_U0_multicastNumStream_0_din,
        multicastNumStream_0_full_n => multicastNumStream_full_n,
        multicastNumStream_0_write => multicast_int_2_U0_multicastNumStream_0_write,
        multicastNumStream_0_num_data_valid => multicastNumStream_num_data_valid,
        multicastNumStream_0_fifo_cap => multicastNumStream_fifo_cap,
        multicastNumStream_1_din => multicast_int_2_U0_multicastNumStream_1_din,
        multicastNumStream_1_full_n => multicastNumStream_1_full_n,
        multicastNumStream_1_write => multicast_int_2_U0_multicastNumStream_1_write,
        multicastNumStream_1_num_data_valid => multicastNumStream_1_num_data_valid,
        multicastNumStream_1_fifo_cap => multicastNumStream_1_fifo_cap);

    padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0 : component harness_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_start,
        start_full_n => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_full_n,
        ap_done => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_done,
        ap_continue => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_continue,
        ap_idle => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_idle,
        ap_ready => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_ready,
        multicastNumStream_0_dout => multicastNumStream_dout,
        multicastNumStream_0_empty_n => multicastNumStream_empty_n,
        multicastNumStream_0_read => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_multicastNumStream_0_read,
        multicastNumStream_0_num_data_valid => multicastNumStream_num_data_valid,
        multicastNumStream_0_fifo_cap => multicastNumStream_fifo_cap,
        paddingStream_0_din => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_0_din,
        paddingStream_0_full_n => paddingStream_0_full_n,
        paddingStream_0_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_0_write,
        paddingStream_0_num_data_valid => ap_const_lv3_0,
        paddingStream_0_fifo_cap => ap_const_lv3_0,
        inputStream_0_dout => inputStream_0_dout,
        inputStream_0_empty_n => inputStream_0_empty_n,
        inputStream_0_read => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_inputStream_0_read,
        inputStream_0_num_data_valid => ap_const_lv3_0,
        inputStream_0_fifo_cap => ap_const_lv3_0,
        paddingStream_1_din => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_1_din,
        paddingStream_1_full_n => paddingStream_1_full_n,
        paddingStream_1_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_1_write,
        paddingStream_1_num_data_valid => ap_const_lv3_0,
        paddingStream_1_fifo_cap => ap_const_lv3_0,
        inputStream_1_dout => inputStream_1_dout,
        inputStream_1_empty_n => inputStream_1_empty_n,
        inputStream_1_read => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_inputStream_1_read,
        inputStream_1_num_data_valid => ap_const_lv3_0,
        inputStream_1_fifo_cap => ap_const_lv3_0,
        paddingStream_0_almost_full_n => paddingStream_0_almost_full_n,
        paddingStream_1_almost_full_n => paddingStream_1_almost_full_n,
        start_out => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_out,
        start_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_write);

    dense_relu_saturate_U0 : component harness_dense_relu_saturate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_relu_saturate_U0_ap_start,
        ap_done => dense_relu_saturate_U0_ap_done,
        ap_continue => dense_relu_saturate_U0_ap_continue,
        ap_idle => dense_relu_saturate_U0_ap_idle,
        ap_ready => dense_relu_saturate_U0_ap_ready,
        paddingStream_0_dout => paddingStream_0_dout,
        paddingStream_0_empty_n => paddingStream_0_empty_n,
        paddingStream_0_read => dense_relu_saturate_U0_paddingStream_0_read,
        paddingStream_0_num_data_valid => dense_relu_saturate_U0_paddingStream_0_num_data_valid,
        paddingStream_0_fifo_cap => dense_relu_saturate_U0_paddingStream_0_fifo_cap,
        dense11Stream_0_din => dense_relu_saturate_U0_dense11Stream_0_din,
        dense11Stream_0_full_n => dense11Stream_0_full_n,
        dense11Stream_0_write => dense_relu_saturate_U0_dense11Stream_0_write,
        dense11Stream_0_num_data_valid => dense_relu_saturate_U0_dense11Stream_0_num_data_valid,
        dense11Stream_0_fifo_cap => dense_relu_saturate_U0_dense11Stream_0_fifo_cap);

    dense_relu_saturate_1_U0 : component harness_dense_relu_saturate_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_relu_saturate_1_U0_ap_start,
        ap_done => dense_relu_saturate_1_U0_ap_done,
        ap_continue => dense_relu_saturate_1_U0_ap_continue,
        ap_idle => dense_relu_saturate_1_U0_ap_idle,
        ap_ready => dense_relu_saturate_1_U0_ap_ready,
        paddingStream_1_dout => paddingStream_1_dout,
        paddingStream_1_empty_n => paddingStream_1_empty_n,
        paddingStream_1_read => dense_relu_saturate_1_U0_paddingStream_1_read,
        paddingStream_1_num_data_valid => dense_relu_saturate_1_U0_paddingStream_1_num_data_valid,
        paddingStream_1_fifo_cap => dense_relu_saturate_1_U0_paddingStream_1_fifo_cap,
        dense11Stream_1_din => dense_relu_saturate_1_U0_dense11Stream_1_din,
        dense11Stream_1_full_n => dense11Stream_1_full_n,
        dense11Stream_1_write => dense_relu_saturate_1_U0_dense11Stream_1_write,
        dense11Stream_1_num_data_valid => dense_relu_saturate_1_U0_dense11Stream_1_num_data_valid,
        dense11Stream_1_fifo_cap => dense_relu_saturate_1_U0_dense11Stream_1_fifo_cap);

    filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0 : component harness_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_start,
        ap_done => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_done,
        ap_continue => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_continue,
        ap_idle => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_idle,
        ap_ready => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_ready,
        multicastNumStream_1_dout => multicastNumStream_1_dout,
        multicastNumStream_1_empty_n => multicastNumStream_1_empty_n,
        multicastNumStream_1_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_multicastNumStream_1_read,
        multicastNumStream_1_num_data_valid => multicastNumStream_1_num_data_valid,
        multicastNumStream_1_fifo_cap => multicastNumStream_1_fifo_cap,
        lastStream_0_din => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_0_din,
        lastStream_0_full_n => lastStream_0_full_n,
        lastStream_0_write => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_0_write,
        lastStream_0_num_data_valid => lastStream_0_num_data_valid,
        lastStream_0_fifo_cap => lastStream_0_fifo_cap,
        lastStream_1_din => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_1_din,
        lastStream_1_full_n => lastStream_1_full_n,
        lastStream_1_write => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_1_write,
        lastStream_1_num_data_valid => lastStream_1_num_data_valid,
        lastStream_1_fifo_cap => lastStream_1_fifo_cap,
        dense11Stream_0_dout => dense11Stream_0_dout,
        dense11Stream_0_empty_n => dense11Stream_0_empty_n,
        dense11Stream_0_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dense11Stream_0_read,
        dense11Stream_0_num_data_valid => dense11Stream_0_num_data_valid,
        dense11Stream_0_fifo_cap => dense11Stream_0_fifo_cap,
        outputStream_0_din => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_0_din,
        outputStream_0_full_n => outputStream_0_full_n,
        outputStream_0_write => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_0_write,
        outputStream_0_num_data_valid => outputStream_0_num_data_valid,
        outputStream_0_fifo_cap => outputStream_0_fifo_cap,
        dense11Stream_1_dout => dense11Stream_1_dout,
        dense11Stream_1_empty_n => dense11Stream_1_empty_n,
        dense11Stream_1_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dense11Stream_1_read,
        dense11Stream_1_num_data_valid => dense11Stream_1_num_data_valid,
        dense11Stream_1_fifo_cap => dense11Stream_1_fifo_cap,
        outputStream_1_din => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_1_din,
        outputStream_1_full_n => outputStream_1_full_n,
        outputStream_1_write => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_1_write,
        outputStream_1_num_data_valid => outputStream_1_num_data_valid,
        outputStream_1_fifo_cap => outputStream_1_fifo_cap,
        lastStream_0_almost_full_n => lastStream_0_almost_full_n,
        lastStream_1_almost_full_n => lastStream_1_almost_full_n);

    multicastNumStream_U : component harness_fifo_w32_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => multicast_int_2_U0_multicastNumStream_0_din,
        if_full_n => multicastNumStream_full_n,
        if_write => multicast_int_2_U0_multicastNumStream_0_write,
        if_dout => multicastNumStream_dout,
        if_empty_n => multicastNumStream_empty_n,
        if_read => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_multicastNumStream_0_read,
        if_num_data_valid => multicastNumStream_num_data_valid,
        if_fifo_cap => multicastNumStream_fifo_cap);

    multicastNumStream_1_U : component harness_fifo_w32_d32_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => multicast_int_2_U0_multicastNumStream_1_din,
        if_full_n => multicastNumStream_1_full_n,
        if_write => multicast_int_2_U0_multicastNumStream_1_write,
        if_dout => multicastNumStream_1_dout,
        if_empty_n => multicastNumStream_1_empty_n,
        if_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_multicastNumStream_1_read,
        if_num_data_valid => multicastNumStream_1_num_data_valid,
        if_fifo_cap => multicastNumStream_1_fifo_cap);

    paddingStream_0_U : component harness_fifo_w296_d4_A_with_almost
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_0_din,
        if_full_n => paddingStream_0_full_n,
        if_almost_full_n => paddingStream_0_almost_full_n,
        if_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_0_write,
        if_dout => paddingStream_0_dout,
        if_empty_n => paddingStream_0_empty_n,
        if_almost_empty_n => paddingStream_0_almost_empty_n,
        if_read => dense_relu_saturate_U0_paddingStream_0_read,
        if_num_data_valid => paddingStream_0_num_data_valid,
        if_fifo_cap => paddingStream_0_fifo_cap);

    paddingStream_1_U : component harness_fifo_w296_d4_A_with_almost
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_1_din,
        if_full_n => paddingStream_1_full_n,
        if_almost_full_n => paddingStream_1_almost_full_n,
        if_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_paddingStream_1_write,
        if_dout => paddingStream_1_dout,
        if_empty_n => paddingStream_1_empty_n,
        if_almost_empty_n => paddingStream_1_almost_empty_n,
        if_read => dense_relu_saturate_1_U0_paddingStream_1_read,
        if_num_data_valid => paddingStream_1_num_data_valid,
        if_fifo_cap => paddingStream_1_fifo_cap);

    dense11Stream_0_U : component harness_fifo_w128_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dense_relu_saturate_U0_dense11Stream_0_din,
        if_full_n => dense11Stream_0_full_n,
        if_write => dense_relu_saturate_U0_dense11Stream_0_write,
        if_dout => dense11Stream_0_dout,
        if_empty_n => dense11Stream_0_empty_n,
        if_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dense11Stream_0_read,
        if_num_data_valid => dense11Stream_0_num_data_valid,
        if_fifo_cap => dense11Stream_0_fifo_cap);

    dense11Stream_1_U : component harness_fifo_w128_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dense_relu_saturate_1_U0_dense11Stream_1_din,
        if_full_n => dense11Stream_1_full_n,
        if_write => dense_relu_saturate_1_U0_dense11Stream_1_write,
        if_dout => dense11Stream_1_dout,
        if_empty_n => dense11Stream_1_empty_n,
        if_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dense11Stream_1_read,
        if_num_data_valid => dense11Stream_1_num_data_valid,
        if_fifo_cap => dense11Stream_1_fifo_cap);

    start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_U : component harness_start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_din,
        if_full_n => start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_full_n,
        if_write => multicast_int_2_U0_start_write,
        if_dout => start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_dout,
        if_empty_n => start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_empty_n,
        if_read => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_ready);

    start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_U : component harness_start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_din,
        if_full_n => start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_full_n,
        if_write => multicast_int_2_U0_start_write,
        if_dout => start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_dout,
        if_empty_n => start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_empty_n,
        if_read => filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_ready);

    start_for_dense_relu_saturate_U0_U : component harness_start_for_dense_relu_saturate_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dense_relu_saturate_U0_din,
        if_full_n => start_for_dense_relu_saturate_U0_full_n,
        if_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_write,
        if_dout => start_for_dense_relu_saturate_U0_dout,
        if_empty_n => start_for_dense_relu_saturate_U0_empty_n,
        if_read => dense_relu_saturate_U0_ap_ready);

    start_for_dense_relu_saturate_1_U0_U : component harness_start_for_dense_relu_saturate_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dense_relu_saturate_1_U0_din,
        if_full_n => start_for_dense_relu_saturate_1_U0_full_n,
        if_write => padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_write,
        if_dout => start_for_dense_relu_saturate_1_U0_dout,
        if_empty_n => start_for_dense_relu_saturate_1_U0_empty_n,
        if_read => dense_relu_saturate_1_U0_ap_ready);




    ap_done <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_done;
    ap_idle <= (padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_idle and multicast_int_2_U0_ap_idle and filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_idle and dense_relu_saturate_U0_ap_idle and dense_relu_saturate_1_U0_ap_idle);
    ap_ready <= multicast_int_2_U0_ap_ready;
    dense_relu_saturate_1_U0_ap_continue <= ap_const_logic_1;
    dense_relu_saturate_1_U0_ap_start <= start_for_dense_relu_saturate_1_U0_empty_n;
    dense_relu_saturate_1_U0_dense11Stream_1_fifo_cap <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(dense11Stream_1_fifo_cap),3))),32));
    dense_relu_saturate_1_U0_dense11Stream_1_num_data_valid <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(dense11Stream_1_num_data_valid),3))),32));
    dense_relu_saturate_1_U0_paddingStream_1_fifo_cap <= paddingStream_1_fifo_cap(3 - 1 downto 0);
    dense_relu_saturate_1_U0_paddingStream_1_num_data_valid <= paddingStream_1_num_data_valid(3 - 1 downto 0);
    dense_relu_saturate_U0_ap_continue <= ap_const_logic_1;
    dense_relu_saturate_U0_ap_start <= start_for_dense_relu_saturate_U0_empty_n;
    dense_relu_saturate_U0_dense11Stream_0_fifo_cap <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(dense11Stream_0_fifo_cap),3))),32));
    dense_relu_saturate_U0_dense11Stream_0_num_data_valid <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(dense11Stream_0_num_data_valid),3))),32));
    dense_relu_saturate_U0_paddingStream_0_fifo_cap <= paddingStream_0_fifo_cap(3 - 1 downto 0);
    dense_relu_saturate_U0_paddingStream_0_num_data_valid <= paddingStream_0_num_data_valid(3 - 1 downto 0);
    filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_continue <= ap_continue;
    filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_ap_start <= start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_empty_n;
    inputStream_0_read <= padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_inputStream_0_read;
    inputStream_1_read <= padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_inputStream_1_read;
    lastStream_0_din <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_0_din;
    lastStream_0_read <= ap_const_logic_0;
    lastStream_0_write <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_0_write;
    lastStream_1_din <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_1_din;
    lastStream_1_read <= ap_const_logic_0;
    lastStream_1_write <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_lastStream_1_write;
    multicast_int_2_U0_ap_continue <= ap_const_logic_1;
    multicast_int_2_U0_ap_start <= ap_start;
    multicast_int_2_U0_start_full_n <= (start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_full_n and start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_full_n);
    numStream_read <= multicast_int_2_U0_numStream_read;
    outputStream_0_din <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_0_din;
    outputStream_0_read <= ap_const_logic_0;
    outputStream_0_write <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_0_write;
    outputStream_1_din <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_1_din;
    outputStream_1_read <= ap_const_logic_0;
    outputStream_1_write <= filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_outputStream_1_write;
    padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_continue <= ap_const_logic_1;
    padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_ap_start <= start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_empty_n;
    padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_start_full_n <= (start_for_dense_relu_saturate_U0_full_n and start_for_dense_relu_saturate_1_U0_full_n);
    start_for_dense_relu_saturate_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dense_relu_saturate_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_filter_array_ap_ufixed_8_3_5_3_0_16ul_2_16_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_padding_array_ap_ufixed_8_3_5_3_0_37ul_2_16_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
