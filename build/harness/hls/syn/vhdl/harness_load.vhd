-- ==============================================================
-- Generated by Vitis HLS v2024.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity harness_load is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    numEvents : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_0_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
    m_axi_gmem0_0_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
    m_axi_gmem0_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_0_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
    m_axi_gmem0_0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    inputNumList : IN STD_LOGIC_VECTOR (63 downto 0);
    inFeatureList : IN STD_LOGIC_VECTOR (63 downto 0);
    inputStream_0_din : OUT STD_LOGIC_VECTOR (295 downto 0);
    inputStream_0_full_n : IN STD_LOGIC;
    inputStream_0_write : OUT STD_LOGIC;
    inputStream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    inputStream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    inputStream_1_din : OUT STD_LOGIC_VECTOR (295 downto 0);
    inputStream_1_full_n : IN STD_LOGIC;
    inputStream_1_write : OUT STD_LOGIC;
    inputStream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    inputStream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    numStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    numStream_full_n : IN STD_LOGIC;
    numStream_write : OUT STD_LOGIC;
    numStream_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
    numStream_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of harness_load is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1024_lc_1 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal nums_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal nums_1_ce0 : STD_LOGIC;
    signal nums_1_we0 : STD_LOGIC;
    signal nums_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputNumList_read_reg_177 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal numEvents_read_reg_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln54_fu_113_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln54_reg_187 : STD_LOGIC_VECTOR (30 downto 0);
    signal inFeatureList_read_reg_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal empty_fu_130_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_197 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln61_fu_136_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln61_reg_202 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast5_i_cast_fu_147_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_cast5_i_cast_reg_207 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_156_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_reg_212 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_done : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_idle : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_ready : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWVALID : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WVALID : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WSTRB : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WLAST : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARVALID : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_RREADY : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_BREADY : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_numStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_numStream_write : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_ce0 : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_we0 : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_idle : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_ready : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWVALID : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WVALID : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WDATA : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WSTRB : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WLAST : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARVALID : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_RREADY : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_BREADY : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_0_din : STD_LOGIC_VECTOR (295 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_0_write : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_1_din : STD_LOGIC_VECTOR (295 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_1_write : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_ce0 : STD_LOGIC;
    signal grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call9 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_57_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component harness_load_Pipeline_VITIS_LOOP_54_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_0_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_gmem0_0_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem0_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_gmem0_0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        numStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        numStream_full_n : IN STD_LOGIC;
        numStream_write : OUT STD_LOGIC;
        numStream_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
        numStream_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0);
        empty : IN STD_LOGIC_VECTOR (30 downto 0);
        inputNumList : IN STD_LOGIC_VECTOR (63 downto 0);
        nums_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        nums_1_ce0 : OUT STD_LOGIC;
        nums_1_we0 : OUT STD_LOGIC;
        nums_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component harness_load_Pipeline_VITIS_LOOP_61_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_0_WDATA : OUT STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_gmem0_0_WSTRB : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem0_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_RDATA : IN STD_LOGIC_VECTOR (1023 downto 0);
        m_axi_gmem0_0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        inputStream_0_din : OUT STD_LOGIC_VECTOR (295 downto 0);
        inputStream_0_full_n : IN STD_LOGIC;
        inputStream_0_write : OUT STD_LOGIC;
        inputStream_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_1_din : OUT STD_LOGIC_VECTOR (295 downto 0);
        inputStream_1_full_n : IN STD_LOGIC;
        inputStream_1_write : OUT STD_LOGIC;
        inputStream_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        inputStream_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        empty_25 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln61 : IN STD_LOGIC_VECTOR (9 downto 0);
        inFeatureList : IN STD_LOGIC_VECTOR (63 downto 0);
        p_cast5_i_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        empty : IN STD_LOGIC_VECTOR (6 downto 0);
        nums_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        nums_1_ce0 : OUT STD_LOGIC;
        nums_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component harness_load_nums_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    nums_1_U : component harness_load_nums_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8192,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => nums_1_address0,
        ce0 => nums_1_ce0,
        we0 => nums_1_we0,
        d0 => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_d0,
        q0 => nums_1_q0);

    grp_load_Pipeline_VITIS_LOOP_54_1_fu_82 : component harness_load_Pipeline_VITIS_LOOP_54_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start,
        ap_done => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_done,
        ap_idle => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_idle,
        ap_ready => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_ready,
        m_axi_gmem0_0_AWVALID => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_0_AWADDR => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY => ap_const_logic_0,
        m_axi_gmem0_0_WDATA => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY => m_axi_gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID => m_axi_gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA => m_axi_gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST => m_axi_gmem0_0_RLAST,
        m_axi_gmem0_0_RID => m_axi_gmem0_0_RID,
        m_axi_gmem0_0_RFIFONUM => m_axi_gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER => m_axi_gmem0_0_RUSER,
        m_axi_gmem0_0_RRESP => m_axi_gmem0_0_RRESP,
        m_axi_gmem0_0_BVALID => ap_const_logic_0,
        m_axi_gmem0_0_BREADY => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_0_BID => ap_const_lv1_0,
        m_axi_gmem0_0_BUSER => ap_const_lv1_0,
        numStream_din => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_numStream_din,
        numStream_full_n => numStream_full_n,
        numStream_write => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_numStream_write,
        numStream_num_data_valid => ap_const_lv14_0,
        numStream_fifo_cap => ap_const_lv14_0,
        empty => trunc_ln54_reg_187,
        inputNumList => inputNumList_read_reg_177,
        nums_1_address0 => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_address0,
        nums_1_ce0 => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_ce0,
        nums_1_we0 => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_we0,
        nums_1_d0 => grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_d0);

    grp_load_Pipeline_VITIS_LOOP_61_2_fu_95 : component harness_load_Pipeline_VITIS_LOOP_61_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start,
        ap_done => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done,
        ap_idle => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_idle,
        ap_ready => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_ready,
        m_axi_gmem0_0_AWVALID => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_0_AWADDR => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY => ap_const_logic_0,
        m_axi_gmem0_0_WDATA => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY => m_axi_gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID => m_axi_gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA => m_axi_gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST => m_axi_gmem0_0_RLAST,
        m_axi_gmem0_0_RID => m_axi_gmem0_0_RID,
        m_axi_gmem0_0_RFIFONUM => m_axi_gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER => m_axi_gmem0_0_RUSER,
        m_axi_gmem0_0_RRESP => m_axi_gmem0_0_RRESP,
        m_axi_gmem0_0_BVALID => ap_const_logic_0,
        m_axi_gmem0_0_BREADY => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_0_BID => ap_const_lv1_0,
        m_axi_gmem0_0_BUSER => ap_const_lv1_0,
        inputStream_0_din => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_0_din,
        inputStream_0_full_n => inputStream_0_full_n,
        inputStream_0_write => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_0_write,
        inputStream_0_num_data_valid => ap_const_lv3_0,
        inputStream_0_fifo_cap => ap_const_lv3_0,
        inputStream_1_din => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_1_din,
        inputStream_1_full_n => inputStream_1_full_n,
        inputStream_1_write => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_1_write,
        inputStream_1_num_data_valid => ap_const_lv3_0,
        inputStream_1_fifo_cap => ap_const_lv3_0,
        empty_25 => empty_reg_197,
        zext_ln61 => tmp_s_reg_212,
        inFeatureList => inFeatureList_read_reg_192,
        p_cast5_i_cast => p_cast5_i_cast_reg_207,
        empty => trunc_ln61_reg_202,
        nums_1_address0 => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_address0,
        nums_1_ce0 => grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_ce0,
        nums_1_q0 => nums_1_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call9))) then 
                    grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_ready = ap_const_logic_1)) then 
                    grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                empty_reg_197 <= empty_fu_130_p2;
                inFeatureList_read_reg_192 <= inFeatureList;
                    p_cast5_i_cast_reg_207(0) <= p_cast5_i_cast_fu_147_p3(0);
                    tmp_s_reg_212(9 downto 3) <= tmp_s_fu_156_p3(9 downto 3);
                trunc_ln61_reg_202 <= trunc_ln61_fu_136_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                inputNumList_read_reg_177 <= inputNumList;
                numEvents_read_reg_182 <= numEvents;
                trunc_ln54_reg_187 <= trunc_ln54_fu_113_p1;
            end if;
        end if;
    end process;
    p_cast5_i_cast_reg_207(1) <= '1';
    tmp_s_reg_212(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_done, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_done)
    begin
        if ((grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done)
    begin
        if ((grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call9_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call9 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    empty_57_fu_141_p2 <= "0" when (trunc_ln61_fu_136_p1 = ap_const_lv7_0) else "1";
    empty_fu_130_p2 <= std_logic_vector(shift_left(unsigned(numEvents_read_reg_182),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_ap_start_reg;
    grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_start_reg;
    inputStream_0_din <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_0_din;
    inputStream_0_write <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_0_write;
    inputStream_1_din <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_1_din;
    inputStream_1_write <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_inputStream_1_write;

    internal_ap_ready_assign_proc : process(grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_0_ARADDR_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARADDR, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARADDR, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARADDR <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARADDR <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARADDR;
        else 
            m_axi_gmem0_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARBURST_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARBURST, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARBURST, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARBURST <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARBURST <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARBURST;
        else 
            m_axi_gmem0_0_ARBURST <= "XX";
        end if; 
    end process;


    m_axi_gmem0_0_ARCACHE_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARCACHE, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARCACHE, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARCACHE <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARCACHE <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARCACHE;
        else 
            m_axi_gmem0_0_ARCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARID, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARID, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARID <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARID <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARID;
        else 
            m_axi_gmem0_0_ARID <= "X";
        end if; 
    end process;


    m_axi_gmem0_0_ARLEN_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLEN, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLEN, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARLEN <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARLEN <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLEN;
        else 
            m_axi_gmem0_0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARLOCK_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLOCK, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLOCK, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARLOCK <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARLOCK <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARLOCK;
        else 
            m_axi_gmem0_0_ARLOCK <= "XX";
        end if; 
    end process;


    m_axi_gmem0_0_ARPROT_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARPROT, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARPROT, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARPROT <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARPROT <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARPROT;
        else 
            m_axi_gmem0_0_ARPROT <= "XXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARQOS_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARQOS, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARQOS, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARQOS <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARQOS <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARQOS;
        else 
            m_axi_gmem0_0_ARQOS <= "XXXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARREGION_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARREGION, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARREGION, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARREGION <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARREGION <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARREGION;
        else 
            m_axi_gmem0_0_ARREGION <= "XXXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARSIZE_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARSIZE, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARSIZE, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARSIZE <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARSIZE <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARSIZE;
        else 
            m_axi_gmem0_0_ARSIZE <= "XXX";
        end if; 
    end process;


    m_axi_gmem0_0_ARUSER_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARUSER, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARUSER, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARUSER <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARUSER <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARUSER;
        else 
            m_axi_gmem0_0_ARUSER <= "X";
        end if; 
    end process;


    m_axi_gmem0_0_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARVALID, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_ARVALID <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_ARVALID <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_ARVALID;
        else 
            m_axi_gmem0_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_0_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_RREADY, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_0_RREADY <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_m_axi_gmem0_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_0_RREADY <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_m_axi_gmem0_0_RREADY;
        else 
            m_axi_gmem0_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_0_WDATA <= ap_const_lv1024_lc_1;
    m_axi_gmem0_0_WID <= ap_const_lv1_0;
    m_axi_gmem0_0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_0_WSTRB <= ap_const_lv128_lc_1;
    m_axi_gmem0_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_0_WVALID <= ap_const_logic_0;
    numStream_din <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_numStream_din;
    numStream_write <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_numStream_write;

    nums_1_address0_assign_proc : process(grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_address0, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            nums_1_address0 <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            nums_1_address0 <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_address0;
        else 
            nums_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    nums_1_ce0_assign_proc : process(grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_ce0, grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            nums_1_ce0 <= grp_load_Pipeline_VITIS_LOOP_61_2_fu_95_nums_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            nums_1_ce0 <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_ce0;
        else 
            nums_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    nums_1_we0_assign_proc : process(grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            nums_1_we0 <= grp_load_Pipeline_VITIS_LOOP_54_1_fu_82_nums_1_we0;
        else 
            nums_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast5_i_cast_fu_147_p3 <= 
        ap_const_lv2_3 when (empty_57_fu_141_p2(0) = '1') else 
        ap_const_lv2_2;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_156_p3 <= (trunc_ln61_fu_136_p1 & ap_const_lv3_0);
    trunc_ln54_fu_113_p1 <= numEvents(31 - 1 downto 0);
    trunc_ln61_fu_136_p1 <= inFeatureList(7 - 1 downto 0);
end behav;
